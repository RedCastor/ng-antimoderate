{"version":3,"sources":["../bower_components/angular-foundation-6/dist/angular-foundation.js"],"names":["global","factory","define","amd","exports","mod","angularFoundation","this","AccordionController","$inject","DropdownToggleController","dropdownToggle","orbit","orbitBullets","orbitContainer","orbitSlide","orbitPrevious","orbitNext","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_typeof","Symbol","iterator","obj","constructor","_toConsumableArray","arr","Array","isArray","arr2","from","$scope","$attrs","accordionConfig","$ctrl","groups","closeOthers","openGroup","angular","isDefined","$eval","forEach","group","isOpen","addGroup","groupScope","push","removeGroup","index","indexOf","splice","mediaQueries","$element","$position","$timeout","$transclude","dropdownPaneOffset","hoverTimeout","deRegisterCloseListener","$body","element","document","querySelector","close","e","active","$emit","closeOnClick","off","elementContents","slice","apply","querySelectorAll","every","node","$apply","positionPane","offset_","offset","paneOffset","dropdownTrigger","triggerPosition","position","css","top","height","paneAlign","left","width","transform","clone","tScope","append","parent","$close","$onDestroy","toggle","on","$on","mouseover","cancel","mouseleave","$document","$window","$location","scope","restrict","bindToController","toggleOnHover","transclude","pane","templateUrl","controller","controllerAs","module","constant","directive","replace","require","accordion","heading","$parse","setHTMLHeading","HTMLHeading","$onInit","getIsOpen","setIsOpen","event","assign","$parent","$watch","template","link","attr","accordionGroupCtrl","accordionGroupController","html","run","$templateCache","put","closeable","type","addClass","data","bindHtmlUnsafe","activeClass","toggleEvent","buttonConfig","attrs","ctrls","buttonsCtrl","ngModelCtrl","$render","toggleClass","equals","$modelValue","btnRadio","bind","hasClass","$setViewValue","getTrueValue","getCheckboxValue","btnCheckboxTrue","attributeValue","defaultValue","val","btnCheckboxFalse","$compile","EVENT_BASE","drilldownMenuApi","vm","maxHeight","maxWidth","childMenus","generatedWrapper","reportChild","show","openMenu","hide","closeMenu","hideAll","child","doCloseAll","resizeMenu","doResize","EVENTS","resize","open","_emitEvent","name","_len","arguments","args","_key","newArgs","concat","$postLink","drilldownMenu","nodeName","wrap","ulChild","removeClass","ulParent","one","sizeChild","rect","getBoundingClientRect","Math","max","max-width","min-height","minHeight","elementBack","generatedBack","children","elementChild","prepend","onClickBack","stopImmediatePropagation","preventDefault","elementClasses","onClickOpen","remove","disableHover","disableClickOpen","closingTime","opensLeft","dropdownMenu","mouseLeaveTimeout","topLevel","hasAttribute","matchMedia","doc","bool","docElem","documentElement","refNode","firstElementChild","firstChild","fakeBody","createElement","div","id","style","cssText","background","appendChild","q","innerHTML","insertBefore","offsetWidth","removeChild","matches","media","head","str","styleObject","extractedStyles","getComputedStyle","fontFamily","namedQueries","trim","split","reduce","ret","param","parts","decodeURIComponent","undefined","hasOwnProperty","queries","getCurrentSize","matched","query","atLeast","size","get","window","mobileSniff","test","navigator","userAgent","StackedMap","instance","TypeError","_classCallCheck","stack","find","s","map","filter","_this2","container","overflow","setContainer","container_","$interval","$swipe","_this3","slides","currentIdx","skipInterval","addSlide","slide","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","err","return","activateState","pct","prevState","nextState","stopAutoPlay","autoSlider","restartTimer","startPos","nextIdx","start","pos","move","pctDist","x","roundFn","floor","ceil","end","float","cursor","$modalStack","evt","modal","getTop","backdrop","currentTarget","stopPropagation","dismiss","windowClass","isTop","modalScope","$rootScope","$animate","$q","isMobile","OPENED_MODAL_CLASS","originalScrollPos","openedWindows","resizeHandler","opened","keys","eq","modalPos","reposition","removeModalWindow","modalInstance","modalWindow","backdropDomEl","leave","then","backdropScope","$destroy","body","scrollTop","unbind","modalDomEl","getModalCenter","options","el","windowWidth","clientWidth","windowHeight","clientHeight","offsetHeight","parseInt","which","keyboard","list","loadFocusElementList","focusChanged","shiftKey","isFocusInFirstItem","isModalFocused","focusLastFocusableElement","isFocusInLastItem","focusFirstFocusableElement","modalDomE1","elements","getClientRects","srcElement","focus","deferred","add","topBackdropIndex","backdropIndex","$new","classes","window-class","join","content","detach","visibility","display","z-index","promises","enter","lastChild","modalParent","pageYOffset","all","focusedElem","y","result","resolve","reason","reject","dismissAll","leaveOpenIds","some","skipIds","provider","_this","$get","$injector","$http","$controller","$modal","modalOpts","resolves","promisesArr","modalResultDeferred","defer","modalOpenedDeferred","promise","modalOptions","extend","Error","cache","isFunction","when","invoke","tplAndVars","$dismiss","ctrlInstance","ctrlLocals","resolveIter","$modalInstance","disableAutoClose","right","inner","exitOverlay","leftToggle","rightToggle","win","offCanvasWrapper","offCanvas","$interpolate","self","setNumPages","numPages","noop","init","defaultItemsPerPage","itemsPerPage","totalPages","calculateTotalPages","noPrevious","page","noNext","isActive","totalItems","getAttributeValue","attribute","interpolate","render","pages","getPages","selectPage","onSelectPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","rotate","paginationConfig","paginationCtrl","maxSize","makePage","number","text","isDisabled","disabled","currentPage","startPage","endPage","isMaxSized","min","previousPageSet","unshift","nextPageSet","previousPage","nextPage","firstPage","lastPage","align","pagerConfig","isPrevious","isNext","previous","isStaticPositioned","cssprop","currentStyle","elBCR","offsetParentBCR","offsetParentEl","docDomEl","offsetParent","parentOffsetEl","clientTop","clientLeft","scrollLeft","boundingClientRect","prop","pageXOffset","animate","progressConfig","bars","addBar","bar","oldValue","$index","update","removeBar","newValue","percent","getPercentage","transition","round","progressCtrl","stateOn","stateOff","ratingConfig","maxRange","createRateObjects","states","defaultOptions","n","range","ratingStates","copy","rate","readonly","onHover","reset","onLeave","ctrl","tabs","isUndefined","openOnLoad","select","tab","addTab","removeTab","newActiveIndex","elem","vertical","justified","onSelect","onDeselect","compile","elm","tabsetCtrl","getActive","setActive","oldVal","$transcludeFn","tabCtrl","tabContentTransclude","contents","tagName","toLowerCase","headingElement","placement","popupDelay","triggerMap","click","globalOptions","setTriggers","triggers","prefix","defaultTriggerShow","getTriggers","trigger","directiveName","letter","startSym","startSymbol","endSym","endSymbol","tElem","tooltipLinker","tooltip","popupTimeout","appendToBody","hasEnableExp","positionTooltip","ttWidth","ttHeight","ttPosition","tt_placement","tt_remSize","parseFloat","fontSize","toggleTooltipBind","tt_isOpen","hideTooltipBind","showTooltipBind","tt_popupDelay","tt_content","removeTooltip","$digest","createTooltip","$observe","tt_title","delay","isNaN","unregisterTriggers","showTrigger","hideTrigger","$tooltip"],"mappings":"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","file":"angular-foundation-6.js","sourcesContent":["(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.angularFoundation = mod.exports;\n    }\n})(this, function (exports) {\n    'use strict';\n\n    AccordionController.$inject = ['$scope', '$attrs', 'accordionConfig'];\n    DropdownToggleController.$inject = ['$scope', '$attrs', 'mediaQueries', '$element', '$position', '$timeout', '$transclude', 'dropdownPaneOffset'];\n    dropdownToggle.$inject = ['$document', '$window', '$location'];\n    orbit.$inject = ['$element'];\n    orbitBullets.$inject = ['$element'];\n    orbitContainer.$inject = ['$element', '$interval', '$scope', '$swipe'];\n    orbitSlide.$inject = ['$element'];\n    orbitPrevious.$inject = ['$element'];\n    orbitNext.$inject = ['$element'];\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                arr2[i] = arr[i];\n            }\n\n            return arr2;\n        } else {\n            return Array.from(arr);\n        }\n    }\n\n    /*\n     * angular-foundation-6\n     * http://circlingthesun.github.io/angular-foundation-6/\n    \n     * Version: 0.11.17 - 2018-01-19\n     * License: MIT\n     * (c) \n     */\n\n    function AccordionController($scope, $attrs, accordionConfig) {\n        'ngInject';\n\n        var $ctrl = this;\n        // This array keeps track of the accordion groups\n        $ctrl.groups = [];\n\n        // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n        $ctrl.closeOthers = function (openGroup) {\n            var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n            if (closeOthers) {\n                angular.forEach(this.groups, function (group) {\n                    if (group !== openGroup) {\n                        group.isOpen = false;\n                    }\n                });\n            }\n        };\n\n        // This is called from the accordion-group directive to add itself to the accordion\n        $ctrl.addGroup = function (groupScope) {\n            var that = this;\n            this.groups.push(groupScope);\n        };\n\n        // This is called from the accordion-group directive when to remove itself\n        $ctrl.removeGroup = function (group) {\n            var index = this.groups.indexOf(group);\n            if (index !== -1) {\n                this.groups.splice(index, 1);\n            }\n        };\n    }\n\n    angular.module('mm.foundation.accordion', []).constant('accordionConfig', {\n        closeOthers: true\n    }).controller('AccordionController', AccordionController)\n\n    // The accordion directive simply sets up the directive controller\n    // and adds an accordion CSS class to itself element.\n    .directive('accordion', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            controller: AccordionController,\n            controllerAs: '$ctrl',\n            transclude: true,\n            replace: false,\n            templateUrl: 'template/accordion/accordion.html'\n        };\n    })\n\n    // The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n    .directive('accordionGroup', function () {\n        'ngInject';\n\n        return {\n            require: { 'accordion': '^accordion' }, // We need this directive to be inside an accordion\n            restrict: 'EA',\n            transclude: true, // It transcludes the contents of the directive into the template\n            replace: true, // The element containing the directive will be replaced with the template\n            templateUrl: 'template/accordion/accordion-group.html',\n            scope: {},\n            controllerAs: \"$ctrl\",\n            bindToController: {\n                heading: '@'\n            }, // Create an isolated scope and interpolate the heading attribute onto this scope\n            controller: ['$scope', '$element', '$attrs', '$parse', function accordionGroupController($scope, $element, $attrs, $parse) {\n                'ngInject';\n\n                var $ctrl = this;\n                $ctrl.isOpen = false;\n\n                $ctrl.setHTMLHeading = function (element) {\n                    $ctrl.HTMLHeading = element;\n                };\n\n                $ctrl.$onInit = function () {\n                    $ctrl.accordion.addGroup($ctrl);\n\n                    $scope.$on('$destroy', function (event) {\n                        $ctrl.accordion.removeGroup($ctrl);\n                    });\n\n                    var getIsOpen;\n                    var setIsOpen;\n\n                    if ($attrs.isOpen) {\n                        getIsOpen = $parse($attrs.isOpen);\n                        setIsOpen = getIsOpen.assign;\n\n                        $scope.$parent.$watch(getIsOpen, function (value) {\n                            $ctrl.isOpen = !!value;\n                        });\n                    }\n\n                    $scope.$watch(function () {\n                        return $ctrl.isOpen;\n                    }, function (value) {\n                        if (value) {\n                            $ctrl.accordion.closeOthers($ctrl);\n                        }\n                        setIsOpen && setIsOpen($scope.$parent, value);\n\n                        if (value) {\n                            $scope.$emit('down.af.accordionGroup', $element, $scope);\n                        } else {\n                            $scope.$emit('up.af.accordionGroup', $element, $scope);\n                        }\n                    });\n                };\n            }]\n        };\n    })\n\n    // Use accordion-heading below an accordion-group to provide a heading containing HTML\n    // <accordion-group>\n    //   <accordion-heading>Heading containing HTML - <img src=\"...\"></accordion-heading>\n    // </accordion-group>\n    .directive('accordionHeading', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            transclude: true, // Grab the contents to be used as the heading\n            template: '', // In effect remove this element!\n            replace: true,\n            require: '^accordionGroup',\n            link: function link(scope, element, attr, accordionGroupCtrl, transclude) {\n                // Pass the heading to the accordion-group controller\n                // so that it can be transcluded into the right place in the template\n                // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n                accordionGroupCtrl.setHTMLHeading(transclude(scope, function () {}));\n            }\n        };\n    })\n\n    // Use in the accordion-group template to indicate where you want the heading to be transcluded\n    // You must provide the property on the accordion-group controller that will hold the transcluded element\n    // <div class=\"accordion-group\">\n    //   <div class=\"accordion-heading\" ><a ... accordion-transclude=\"heading\">...</a></div>\n    //   ...\n    // </div>\n    .directive('accordionTransclude', function () {\n        'ngInject';\n\n        return {\n            require: '^accordionGroup',\n            link: function link(scope, element, attr, accordionGroupController) {\n                scope.$watch(function () {\n                    return accordionGroupController.HTMLHeading;\n                }, function (heading) {\n                    if (heading) {\n                        element.html('');\n                        element.append(heading);\n                    }\n                });\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.accordion\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/accordion/accordion-group.html\", \"<li class=\\\"accordion-item\\\" ng-class=\\\"{ \\'is-active\\': $ctrl.isOpen }\\\">\\n  <a ng-click=\\\"$ctrl.isOpen = !$ctrl.isOpen\\\" class=\\\"accordion-title\\\" accordion-transclude>{{$ctrl.heading}}</a>\\n  <div class=\\\"accordion-content\\\" style=\\\"display: block;\\\" ng-show=\\\"$ctrl.isOpen\\\" ng-transclude></div>\\n</li>\\n\");\n            $templateCache.put(\"template/accordion/accordion.html\", \"<ul class=\\\"accordion\\\" ng-transclude></ul>\\n\");\n        }]);\n    })();\n    angular.module(\"mm.foundation.alert\", []).controller('AlertController', ['$scope', '$attrs', function ($scope, $attrs) {\n        'ngInject';\n\n        $scope.closeable = 'close' in $attrs && typeof $attrs.close !== \"undefined\";\n    }]).directive('alert', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            controller: 'AlertController',\n            templateUrl: 'template/alert/alert.html',\n            transclude: true,\n            replace: true,\n            scope: {\n                type: '=',\n                close: '&'\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.alert\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/alert/alert.html\", \"<div class=\\\"callout\\\" ng-class=\\'(type || \\\"\\\")\\'>\\n  <span ng-transclude></span>\\n  <button ng-click=\\\"close()\\\" ng-show=\\\"closeable\\\" class=\\\"close-button\\\" aria-label=\\\"Close alert\\\" type=\\\"button\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.bindHtml', []).directive('bindHtmlUnsafe', function () {\n        'ngInject';\n\n        return function (scope, element, attr) {\n            element.addClass('ng-binding').data('$binding', attr.bindHtmlUnsafe);\n            scope.$watch(attr.bindHtmlUnsafe, function bindHtmlUnsafeWatchAction(value) {\n                element.html(value || '');\n            });\n        };\n    });\n\n    angular.module('mm.foundation.buttons', []).constant('buttonConfig', {\n        activeClass: 'hollow',\n        toggleEvent: 'click'\n    }).controller('ButtonsController', ['buttonConfig', function (buttonConfig) {\n        this.activeClass = buttonConfig.activeClass;\n        this.toggleEvent = buttonConfig.toggleEvent;\n    }]).directive('btnRadio', function () {\n        'ngInject';\n\n        return {\n            require: ['btnRadio', 'ngModel'],\n            controller: 'ButtonsController',\n            link: function link(scope, element, attrs, ctrls) {\n                var buttonsCtrl = ctrls[0],\n                    ngModelCtrl = ctrls[1];\n\n                //model -> UI\n                ngModelCtrl.$render = function () {\n                    element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n                };\n\n                //ui->model\n                element.bind(buttonsCtrl.toggleEvent, function () {\n                    if (!element.hasClass(buttonsCtrl.activeClass)) {\n                        scope.$apply(function () {\n                            ngModelCtrl.$setViewValue(scope.$eval(attrs.btnRadio));\n                            ngModelCtrl.$render();\n                        });\n                    }\n                });\n            }\n        };\n    }).directive('btnCheckbox', function () {\n        'ngInject';\n\n        return {\n            require: ['btnCheckbox', 'ngModel'],\n            controller: 'ButtonsController',\n            link: function link(scope, element, attrs, ctrls) {\n                var buttonsCtrl = ctrls[0],\n                    ngModelCtrl = ctrls[1];\n\n                function getTrueValue() {\n                    return getCheckboxValue(attrs.btnCheckboxTrue, true);\n                }\n\n                function getFalseValue() {\n                    return getCheckboxValue(attrs.btnCheckboxFalse, false);\n                }\n\n                function getCheckboxValue(attributeValue, defaultValue) {\n                    var val = scope.$eval(attributeValue);\n                    return angular.isDefined(val) ? val : defaultValue;\n                }\n\n                //model -> UI\n                ngModelCtrl.$render = function () {\n                    element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n                };\n\n                //ui->model\n                element.bind(buttonsCtrl.toggleEvent, function () {\n                    scope.$apply(function () {\n                        ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n                        ngModelCtrl.$render();\n                    });\n                });\n            }\n        };\n    });\n\n    angular.module('mm.foundation.drilldownMenu', []).directive('drilldownMenu', ['$compile', '$timeout', '$window', function ($compile, $timeout, $window) {\n        'ngInject';\n\n        var EVENT_BASE = 'mm.foundation.drilldownMenu';\n\n        return {\n            bindToController: {\n                drilldownMenuApi: '=?'\n            },\n            scope: {},\n            restrict: 'A',\n            controllerAs: 'vm',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var vm = this;\n\n                vm.maxHeight = -1;\n                vm.maxWidth = -1;\n                vm.childMenus = [];\n                vm.generatedWrapper = null;\n\n                vm.reportChild = reportChild;\n\n                vm.$onInit = $onInit.bind(vm, $scope, $element);\n                vm.$postLink = $postLink;\n                vm.$onDestroy = $onDestroy;\n            }],\n            link: dmLinkFunction\n        };\n\n        /**\n         * Link function for `ul` which heads up the drilldown menu.\n         * We use this to add the wrapper element around the menu\n         *\n         *\n         * @param {Object} $scope           - The scope for this directive\n         * @param {Object} $element         - The element the directive is attached to\n         * @param {any[]} $attrs            - The attributes list for the element\n         * @param {?Object} drilldownMenu   - The drilldownMenu controller\n         */\n        function dmLinkFunction($scope, $element, $attrs, drilldownMenu) {\n            if (!drilldownMenu) {\n                return;\n            }\n\n            /**\n             * Check if our parent is already a wrapper div with the right class\n             */\n            var parent = $element.parent();\n            if (!parent || !parent[0] || parent[0].nodeName !== 'DIV' || !parent.hasClass('is-drilldown')) {\n                /**\n                 * Add a wrapper element to hide the overflowed menu items\n                 */\n                var wrapper = '<div class=\"is-drilldown\"></div>';\n                drilldownMenu.generatedWrapper = angular.element(wrapper);\n                $element.wrap(drilldownMenu.generatedWrapper);\n            }\n\n            /**\n             * Store the root element so we have access to it elsewhere\n             */\n            drilldownMenu.$element = $element;\n        }\n\n        /**\n         * Opens the UL representing the menu.\n         *\n         * @param {Object} ulChild  - The child UL menu to open\n         */\n        function openMenu(ulChild) {\n            ulChild.removeClass('invisible');\n            ulChild.addClass('is-active');\n\n            this.EVENTS._emitEvent(this.EVENTS.open, ulChild);\n        }\n\n        /**\n         * Closes the UL representing the menu.\n         *\n         * @param {Object} ulParent - The UL parent menu to close\n         */\n        function closeMenu(ulParent) {\n            ulParent.addClass('is-closing');\n            ulParent.one('transitionend', function () {\n                ulParent.removeClass('is-active is-closing');\n                ulParent.addClass('invisible');\n            });\n\n            this.EVENTS._emitEvent(this.EVENTS.hide, ulParent);\n        }\n\n        /**\n         * Returns to the top level in the menu.\n         */\n        function doCloseAll(vm) {\n            for (var i = 0; i < vm.childMenus.length; ++i) {\n                var child = vm.childMenus[i];\n                if (child.hasClass('is-active')) {\n                    vm.drilldownMenuApi.hide(child);\n                }\n            }\n        }\n\n        /**\n         * The main controller gets notified of child menus so that it can manage\n         * them appropriately.\n         *\n         * @param {Object} child   - the child element (as an angular.element).\n         */\n        function reportChild(child) {\n            this.childMenus.push(child);\n        }\n\n        /**\n         * Does a resize of the control based on the dimensions of the largest\n         * submenu (or the top level if its the biggest(.\n         *\n         * @param {Object} vm   - the view model for this directive\n         */\n        function doResize(vm) {\n            var parent = vm.$element.parent();\n\n            /**\n             * Reset any hardcoded styles so the children can achieve their natural size\n             */\n            parent.css({\n                'max-width': 'none',\n                'min-height': 'none'\n            });\n            vm.maxHeight = -1;\n            vm.maxWidth = -1;\n\n            /**\n             * Calculate the height of each menu and work out the maxes.\n             */\n            function sizeChild(child) {\n                var rect = child[0].getBoundingClientRect();\n                vm.maxHeight = Math.max(vm.maxHeight, rect.height);\n                vm.maxWidth = Math.max(vm.maxWidth, rect.width);\n            }\n            sizeChild(vm.$element);\n            angular.forEach(vm.childMenus, sizeChild);\n\n            /**\n             * Turn the sizes into css and apply to the wrapper element (so the\n             * largest submenus are fully visible when shown and don't jump around)\n             */\n            var css = {\n                minHeight: vm.maxHeight + 'px',\n                maxWidth: vm.maxWidth + 'px'\n            };\n\n            parent.css(css);\n\n            /**\n             * Emit an event to say we have been resized\n             */\n            vm.drilldownMenuApi.EVENTS._emitEvent(vm.drilldownMenuApi.EVENTS.resize);\n        }\n\n        /**\n         * Called to initialise the directive.\n         * We use this to setup to the API once the binding has been initialised\n         *\n         * @param {Object} $scope   - the current scope\n         * @param {Object} $element - the element\n         */\n        function $onInit($scope, $element) {\n            var vm = this;\n            vm.drilldownMenuApi = {\n                show: openMenu,\n                hide: closeMenu,\n                hideAll: function hideAll() {\n                    return doCloseAll(vm);\n                },\n                resizeMenu: function resizeMenu() {\n                    return doResize(vm, $scope);\n                },\n\n                EVENTS: {\n                    resize: 'resize.' + EVENT_BASE,\n                    open: 'open.' + EVENT_BASE,\n                    hide: 'hide.' + EVENT_BASE,\n\n                    _emitEvent: emitEvent.bind(vm, $scope, $element)\n                }\n            };\n        }\n\n        /**\n         * Called when everything is finished linking.  We use this to calculate the\n         * height of the sub mnenus so that we can size the wrapper div appropriately\n         * so that the largest submenu is visible.\n         */\n        function $postLink() {\n            var vm = this;\n\n            /**\n             * Set the sizes the first time\n             */\n            doResize(vm);\n\n            /**\n             * Handle window resizes and do it whenever the window size changes.\n             */\n            angular.element($window).on('resize', vm.drilldownMenuApi.resizeMenu);\n        }\n\n        /**\n         * Called when we are being destroyed.\n         *  We use this to do cleanup of the various changes we made\n         */\n        function $onDestroy() {\n            var vm = this;\n\n            /**\n             * Remove the resize event handler\n             */\n            angular.element($window).off('resize', vm.drilldownMenuApi.resizeMenu);\n\n            /**\n             * Find out if we need to remove the generated wrapper element\n             */\n            if (vm.generatedWrapper) {\n                delete vm.generatedWrapper;\n            }\n\n            /**\n             * Cleanup the API functions as they hold the controller by context\n             * and stop the controller deleting properly\n             */\n            delete vm.drilldownMenuApi.hideAll;\n            delete vm.drilldownMenuApi.resizeMenu;\n            delete vm.drilldownMenuApi.EVENTS._emitEvent;\n            vm.drilldownMenuApi = {};\n\n            delete vm.$onInit;\n        }\n\n        /**\n         * Wrapper for $emit to simplify including the base element to identify\n         * the source of our emits.\n         *\n         * @param {Object} $scope               - The scope\n         * @param {angular.element} $element    - The element at the top of the menu\n         * @param {string} name                 - The name of the event to emit\n         * @param {...*} args                   - optional list of arguments to pass on\n         */\n        function emitEvent($scope, $element, name) {\n            for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n                args[_key - 3] = arguments[_key];\n            }\n\n            //\n            // Add our root element as the first extra argument\n            //\n            var newArgs = [$element].concat(args);\n            $scope.$emit.apply($scope, [name].concat(_toConsumableArray(newArgs)));\n        }\n    }]).directive('ul', ['$compile', function ($compile) {\n        'ngInject';\n\n        return {\n            require: '?^^drilldownMenu', // Must be in an ancestor UL, not *this* UL\n            restrict: 'E',\n            link: ulLinkFunction\n        };\n\n        /**\n         * Link function for `ul` which may (or may not) be in a drilldown menu.\n         * We use this to add in the li for moving backwards in the list, and set\n         * the appropriate styles and click handlers.\n         *\n         * NOTE: we require the `drilldownMenu` control to be in an ancestor UL because\n         *       the top level menu doesn't need an automatically added back entry.\n         *\n         * @param {Object} $scope           - The scope for this directive\n         * @param {Object} $element         - The element the directive is attached to\n         * @param {any[]} $attrs            - The attributes list for the element\n         * @param {?Object} drilldownMenu   - The drilldownMenu controller (if any)\n         */\n        function ulLinkFunction($scope, $element, $attrs, drilldownMenu) {\n            if (!drilldownMenu) {\n                return;\n            }\n\n            /**\n             * Check if the dom already contains a \"back\" link with the right class\n             */\n            var elementBack = null;\n            var generatedBack = false;\n            var children = $element.children();\n            for (var i = 0; i < children.length; ++i) {\n                var elementChild = angular.element(children[i]);\n                if (elementChild[0].nodeName === 'LI' && elementChild.hasClass('js-drilldown-back')) {\n                    elementBack = elementChild;\n                }\n            }\n\n            if (!elementBack) {\n                /**\n                 * No existing one, so add in the automatic `back` element\n                 */\n                generatedBack = true;\n                var backButton = '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>';\n                elementBack = angular.element(backButton);\n                $element.prepend(elementBack);\n\n                /**\n                 * Compile the element so that angular knows about it\n                 */\n                $compile(elementBack)($scope);\n            }\n\n            /**\n             * Add the event handler to the `back` element (whether added or existing)\n             */\n            function onClickBack(event) {\n                drilldownMenu.drilldownMenuApi.hide($element);\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            }\n            elementBack.on('click', onClickBack);\n\n            /**\n             * Report this element to the controller for tracking\n             */\n            drilldownMenu.reportChild($element);\n\n            /**\n             * Now set the styles\n             */\n            var elementClasses = 'vertical nested submenu is-drilldown-submenu ' + 'drilldown-submenu-cover-previous invisible';\n            $element.addClass(elementClasses);\n\n            /**\n             * Find the parent LI, and set the event handler to open this level\n             */\n            var parent = $element.parent();\n            parent.addClass('is-drilldown-submenu-parent');\n\n            function onClickOpen(event) {\n                drilldownMenu.drilldownMenuApi.show($element);\n                event.stopImmediatePropagation();\n            }\n            parent.on('click', onClickOpen);\n\n            /**\n             * Handler for $destroy event\n             */\n            $scope.$on('$destroy', function () {\n                /**\n                 * Remove the open event handler from our parent.\n                 */\n                parent.off('click', onClickOpen);\n\n                /**\n                 * Remove the back event handler\n                 */\n                elementBack.off('click', onClickBack);\n\n                /**\n                 * Remove any back element we dynamically added in\n                 */\n                if (generatedBack) {\n                    elementBack.remove();\n                }\n\n                /**\n                 * Remove the classes we added to the element\n                 */\n                $element.removeClass(elementClasses);\n            });\n        }\n    }]);\n\n    angular.module('mm.foundation.dropdownMenu', []).directive('dropdownMenu', ['$compile', function ($compile) {\n        'ngInject';\n\n        return {\n            bindToController: {\n                disableHover: '=',\n                disableClickOpen: '=',\n                closingTime: '=',\n                opensLeft: '='\n            },\n            scope: {},\n            restrict: 'A',\n            controllerAs: 'vm',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var vm = this;\n            }]\n        };\n    }]).directive('li', ['$timeout', function ($timeout) {\n        'ngInject';\n\n        return {\n            require: '?^^dropdownMenu',\n            restrict: 'E',\n            link: function link($scope, $element, $attrs, dropdownMenu) {\n                if (!dropdownMenu) {\n                    return;\n                }\n\n                var ulChild = null;\n                var children = $element[0].children;\n                var mouseLeaveTimeout;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = angular.element(children[i]);\n                    if (child[0].nodeName === 'UL' && child.hasClass('menu')) {\n                        ulChild = child;\n                    }\n                }\n\n                var topLevel = $element.parent()[0].hasAttribute('dropdown-menu');\n                if (!topLevel) {\n                    $element.addClass('is-submenu-item');\n                }\n\n                if (ulChild) {\n                    ulChild.addClass('is-dropdown-submenu menu submenu vertical');\n                    $element.addClass('is-dropdown-submenu-parent opens-' + (dropdownMenu.opensLeft ? 'left' : 'right'));\n\n                    if (topLevel) {\n                        ulChild.addClass('first-sub');\n                    }\n\n                    if (!dropdownMenu.disableHover) {\n                        $element.on('mouseenter', function () {\n\n                            $timeout.cancel(mouseLeaveTimeout);\n                            $element.parent().children().children().removeClass('js-dropdown-active');\n                            ulChild.addClass('js-dropdown-active');\n                            $element.addClass('is-active');\n                        });\n                    }\n\n                    $element.on('click', function () {\n                        ulChild.addClass('js-dropdown-active');\n                        $element.addClass('is-active');\n                        // $element.attr('data-is-click', 'true');\n                    });\n\n                    $element.on('mouseleave', function () {\n                        mouseLeaveTimeout = $timeout(function () {\n                            ulChild.removeClass('js-dropdown-active');\n                            $element.removeClass('is-active');\n                        }, dropdownMenu.closingTime ? dropdownMenu.closingTime : 500);\n                    });\n                }\n            }\n        };\n    }]);\n    'use strict';\n    function DropdownToggleController($scope, $attrs, mediaQueries, $element, $position, $timeout, $transclude, dropdownPaneOffset) {\n        'ngInject';\n\n        var $ctrl = this;\n        var hoverTimeout = void 0,\n            deRegisterCloseListener = void 0;\n        var $body = angular.element(document.querySelector('body'));\n        $ctrl.css = {};\n\n        $transclude(function (clone, tScope) {\n            var el = angular.element($element[0].querySelector('span:nth-child(1)'));\n            el.append(clone);\n        }, $element.parent(), 'toggle');\n\n        $transclude(function (clone, tScope) {\n            tScope.$close = close;\n            var el = angular.element($element[0].querySelector('div:nth-child(2)'));\n            el.append(clone);\n        }, $element.parent(), 'pane');\n\n        $timeout(function () {\n            positionPane();\n        });\n\n        function close(e) {\n            $ctrl.active = false;\n            $scope.$emit('close.af.dropdownToggle', $element, $scope);\n\n            if ($ctrl.closeOnClick) {\n                $body.off('click', closeOnClick);\n            }\n            deRegisterCloseListener();\n        }\n\n        function open(e) {\n            $ctrl.active = true;\n            $scope.$emit('open.af.dropdownToggle', $element, $scope);\n\n            positionPane(dropdownPaneOffset);\n\n            if ($ctrl.closeOnClick) {\n                $body.on('click', closeOnClick);\n            }\n            deRegisterCloseListener = $scope.$on('doClose.af.dropdownToggle', close);\n        }\n\n        function closeOnClick(e) {\n            var elementContents = Array.prototype.slice.apply($element[0].querySelectorAll('*'));\n\n            if (!elementContents.length) {\n                return;\n            }\n\n            var isOuterElement = elementContents.every(function (node) {\n                return node !== e.target;\n            });\n\n            if (isOuterElement) {\n                close();\n                $scope.$apply();\n            }\n        }\n\n        $ctrl.$onDestroy = function () {\n            if ($ctrl.closeOnClick) {\n                $body.off('click', closeOnClick);\n            }\n        };\n\n        $ctrl.toggle = function () {\n            if ($ctrl.active) {\n                close();\n            } else {\n                open();\n            }\n        };\n\n        $ctrl.mouseover = function () {\n            $timeout.cancel(hoverTimeout);\n            $timeout(function () {\n                $ctrl.active = true;\n            });\n            positionPane(dropdownPaneOffset);\n        };\n\n        $ctrl.mouseleave = function () {\n            $timeout.cancel(hoverTimeout);\n            hoverTimeout = $timeout(function () {\n                $scope.$apply(function () {\n                    $ctrl.active = false;\n                });\n            }, 250);\n        };\n\n        function positionPane(offset_) {\n            var offset = $ctrl.paneOffset || offset_;\n            var dropdownTrigger = angular.element($element[0].querySelector('toggle *:first-child'));\n\n            // let dropdownWidth = dropdown.prop('offsetWidth');\n            var triggerPosition = $position.position(dropdownTrigger);\n\n            $ctrl.css.top = triggerPosition.top + triggerPosition.height + offset + 'px';\n\n            if ($ctrl.paneAlign === 'center') {\n                $ctrl.css.left = triggerPosition.left + triggerPosition.width / 2 + 'px';\n                $ctrl.css.transform = 'translateX(-50%)';\n            } else if ($ctrl.paneAlign === 'right') {\n                $ctrl.css.left = triggerPosition.left + triggerPosition.width + 'px';\n                $ctrl.css.transform = 'translateX(-100%)';\n            } else {\n                $ctrl.css.left = triggerPosition.left + 'px';\n            }\n        }\n    }\n\n    function dropdownToggle($document, $window, $location) {\n        'ngInject';\n\n        return {\n            scope: {},\n            restrict: 'EA',\n            bindToController: {\n                closeOnClick: '=',\n                paneAlign: '@',\n                toggleOnHover: '=',\n                paneOffset: '='\n            },\n            transclude: {\n                'toggle': 'toggle',\n                'pane': 'pane'\n            },\n            templateUrl: 'template/dropdownToggle/dropdownToggle.html',\n            controller: DropdownToggleController,\n            controllerAs: '$ctrl'\n        };\n    }\n\n    /*\n     * dropdownToggle - Provides dropdown menu functionality\n     * @restrict class or attribute\n     * @example:\n    \n       <a dropdown-toggle=\"#dropdown-menu\">My Dropdown Menu</a>\n       <ul id=\"dropdown-menu\" class=\"f-dropdown\">\n         <li ng-repeat=\"choice in dropChoices\">\n           <a ng-href=\"{{choice.href}}\">{{choice.text}}</a>\n         </li>\n       </ul>\n     */\n    angular.module('mm.foundation.dropdownToggle', ['mm.foundation.position', 'mm.foundation.mediaQueries']).directive('dropdownToggle', dropdownToggle).constant('dropdownPaneOffset', 1);\n\n    (function () {\n        angular.module(\"mm.foundation.dropdownToggle\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/dropdownToggle/dropdownToggle.html\", \"<span\\n    ng-class=\\\"{\\'is-open\\': $ctrl.active}\\\"\\n    ng-click=\\\"$ctrl.toggle()\\\"\\n    ng-mouseover=\\\"$ctrl.toggleOnHover && $ctrl.mouseover()\\\"\\n    ng-mouseleave=\\\"$ctrl.toggleOnHover && $ctrl.mouseleave($event)\\\"></span>\\n<div\\n    ng-style=\\\"$ctrl.css\\\"\\n    ng-class=\\\"{\\'is-open\\': $ctrl.active}\\\"\\n    ng-attr-aria-hidden=\\\"$ctrl.active\\\"\\n    ng-mouseover=\\\"$ctrl.toggleOnHover && $ctrl.mouseover()\\\"\\n    ng-mouseleave=\\\"$ctrl.toggleOnHover && $ctrl.mouseleave($event)\\\"\\n    class=\\\"dropdown-pane{{$ctrl.paneAlign && \\' dropdown-pane-\\' + $ctrl.paneAlign}}\\\"></div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.mediaQueries', []).factory('matchMedia', ['$document', '$window', function ($document, $window) {\n        'ngInject';\n        // MatchMedia for IE <= 9\n\n        return $window.matchMedia || function (doc, undefined) {\n            var bool = void 0;\n            var docElem = doc.documentElement;\n            var refNode = docElem.firstElementChild || docElem.firstChild;\n            // fakeBody required for <FF4 when executed in <head>\n            var fakeBody = doc.createElement('body');\n            var div = doc.createElement('div');\n\n            div.id = 'mq-test-1';\n            div.style.cssText = 'position:absolute;top:-100em';\n            fakeBody.style.background = 'none';\n            fakeBody.appendChild(div);\n\n            return function (q) {\n                div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\n                docElem.insertBefore(fakeBody, refNode);\n                bool = div.offsetWidth === 42;\n                docElem.removeChild(fakeBody);\n                return {\n                    matches: bool,\n                    media: q\n                };\n            };\n        }($document[0]);\n    }]).factory('mediaQueries', ['$document', 'matchMedia', function ($document, matchMedia) {\n        'ngInject';\n\n        // Thank you: https://github.com/sindresorhus/query-string\n\n        function parseStyleToObject(str) {\n            var styleObject = {};\n\n            if (typeof str !== 'string') {\n                return styleObject;\n            }\n\n            str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n            if (!str) {\n                return styleObject;\n            }\n\n            styleObject = str.split('&').reduce(function (ret, param) {\n                var parts = param.replace(/\\+/g, ' ').split('=');\n                var key = parts[0];\n                var val = parts[1];\n                key = decodeURIComponent(key);\n\n                // missing `=` should be `null`:\n                // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n                val = val === undefined ? null : decodeURIComponent(val);\n\n                if (!ret.hasOwnProperty(key)) {\n                    ret[key] = val;\n                } else if (Array.isArray(ret[key])) {\n                    ret[key].push(val);\n                } else {\n                    ret[key] = [ret[key], val];\n                }\n                return ret;\n            }, {});\n\n            return styleObject;\n        }\n\n        var head = angular.element($document[0].querySelector('head'));\n        head.append('<meta class=\"foundation-mq\" />');\n        var extractedStyles = getComputedStyle(head[0].querySelector('meta.foundation-mq')).fontFamily;\n        var namedQueries = parseStyleToObject(extractedStyles);\n        var queries = [];\n\n        for (var key in namedQueries) {\n            queries.push({\n                name: key,\n                value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n            });\n        }\n\n        // Gets the media query of a breakpoint.\n        function get(size) {\n            for (var i in queries) {\n                var query = queries[i];\n                if (size === query.name) return query.value;\n            }\n\n            return null;\n        }\n\n        function atLeast(size) {\n            var query = get(size);\n\n            if (query) {\n                return window.matchMedia(query).matches;\n            }\n            return false;\n        }\n\n        // Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n        function getCurrentSize() {\n            var matched = void 0;\n\n            for (var i = 0; i < queries.length; i++) {\n                var query = queries[i];\n\n                if (matchMedia(query.value).matches) {\n                    matched = query;\n                }\n            }\n\n            if ((typeof matched === 'undefined' ? 'undefined' : _typeof(matched)) === 'object') {\n                return matched.name;\n            }\n            return matched;\n        }\n\n        var iPhoneSniff = function iPhoneSniff() {\n            return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n            );\n        };\n        var androidSniff = function androidSniff() {\n            return (/Android/.test(window.navigator.userAgent)\n            );\n        };\n\n        return {\n            getCurrentSize: getCurrentSize,\n            atLeast: atLeast,\n            mobileSniff: function mobileSniff() {\n                return iPhoneSniff() || androidSniff();\n            }\n        };\n    }]);\n\n    var StackedMap = exports.StackedMap = function () {\n        function StackedMap() {\n            _classCallCheck(this, StackedMap);\n\n            this.stack = [];\n        }\n\n        _createClass(StackedMap, [{\n            key: 'add',\n            value: function add(key, value) {\n                this.stack.push({\n                    key: key,\n                    value: value\n                });\n            }\n        }, {\n            key: 'get',\n            value: function get(key) {\n                return this.stack.find(function (s) {\n                    return s.key === key;\n                });\n            }\n        }, {\n            key: 'keys',\n            value: function keys() {\n                return this.stack.map(function (s) {\n                    return s.key;\n                });\n            }\n        }, {\n            key: 'top',\n            value: function top() {\n                return this.stack[this.stack.length - 1];\n            }\n        }, {\n            key: 'remove',\n            value: function remove(key) {\n                this.stack = this.stack.filter(function (s) {\n                    return s.key !== key;\n                });\n            }\n        }, {\n            key: 'removeTop',\n            value: function removeTop() {\n                return this.stack.splice(this.stack.length - 1, 1)[0];\n            }\n        }, {\n            key: 'length',\n            value: function length() {\n                return this.stack.length;\n            }\n        }]);\n\n        return StackedMap;\n    }();\n\n    angular.module('mm.foundation.modal', ['mm.foundation.mediaQueries'])\n\n    /**\n     * A helper directive for the $modal service. It creates a backdrop element.\n     */\n    .directive('modalBackdrop', ['$modalStack', function ($modalStack) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            templateUrl: 'template/modal/backdrop.html',\n            link: function link(scope) {\n                scope.close = function (evt) {\n                    var modal = $modalStack.getTop();\n                    if (modal && modal.value.closeOnClick && modal.value.backdrop && modal.value.backdrop !== 'static' && evt.target === evt.currentTarget) {\n                        evt.preventDefault();\n                        evt.stopPropagation();\n                        $modalStack.dismiss(modal.key, 'backdrop click');\n                    }\n                };\n            }\n        };\n    }]).directive('modalWindow', ['$modalStack', function ($modalStack) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                index: '@'\n            },\n            replace: true,\n            transclude: true,\n            templateUrl: 'template/modal/window.html',\n            link: function link(scope, element, attrs) {\n                scope.windowClass = attrs.windowClass || '';\n                scope.isTop = function () {\n                    var top = $modalStack.getTop();\n                    return top ? top.value.modalScope && top.value.modalScope === scope.$parent : true;\n                };\n            }\n        };\n    }]).factory('$modalStack', ['$window', '$timeout', '$document', '$compile', '$rootScope', '$animate', '$q', 'mediaQueries', function ($window, $timeout, $document, $compile, $rootScope, $animate, $q, mediaQueries) {\n        'ngInject';\n\n        var isMobile = mediaQueries.mobileSniff();\n        var OPENED_MODAL_CLASS = 'is-reveal-open';\n        // For modal focus\n        var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), ' + 'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']), textarea:not([disabled]):not([tabindex=\\'-1\\']), ' + 'iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n\n        var originalScrollPos = null; // For mobile scroll hack\n        var openedWindows = new StackedMap();\n        var $modalStack = {};\n\n        function backdropIndex() {\n            var topBackdropIndex = -1;\n            var opened = openedWindows.keys();\n            for (var i = 0; i < opened.length; i++) {\n                if (openedWindows.get(opened[i]).value.backdrop) {\n                    topBackdropIndex = i;\n                }\n            }\n            return topBackdropIndex;\n        }\n\n        function resizeHandler() {\n            var opened = openedWindows.keys();\n            var fixedPositiong = opened.length > 0;\n            var body = $document.find('body').eq(0);\n\n            for (var i = 0; i < opened.length; i++) {\n                var modalPos = $modalStack.reposition(opened[i]);\n                if (modalPos && modalPos.position !== 'fixed') {\n                    fixedPositiong = false;\n                }\n            }\n        }\n\n        function removeModalWindow(modalInstance) {\n            var modalWindow = openedWindows.get(modalInstance).value;\n\n            // clean up the stack\n            openedWindows.remove(modalInstance);\n\n            // Remove backdrop\n            if (modalWindow.backdropDomEl) {\n                $animate.leave(modalWindow.backdropDomEl).then(function () {\n                    modalWindow.backdropScope.$destroy();\n                });\n            }\n\n            // Remove modal\n            if (openedWindows.length() === 0) {\n                var body = $document.find('body').eq(0);\n                body.removeClass(OPENED_MODAL_CLASS);\n\n                if (isMobile) {\n                    var html = $document.find('html').eq(0);\n                    html.removeClass(OPENED_MODAL_CLASS);\n                    if (originalScrollPos) {\n                        body[0].scrollTop = originalScrollPos;\n                        originalScrollPos = null;\n                    }\n                }\n                angular.element($window).unbind('resize', resizeHandler);\n            }\n\n            // remove window DOM element\n            $animate.leave(modalWindow.modalDomEl).then(function () {\n                modalWindow.modalScope.$destroy();\n            });\n        }\n\n        function isVisible(element) {\n            return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n        }\n\n        function getModalCenter(modalInstance) {\n            var options = modalInstance.options;\n\n            if (options.backdrop) {\n                return { left: 0, position: 'relative' };\n            }\n\n            var el = options.modalDomEl;\n            var body = $document.find('body').eq(0);\n\n            var windowWidth = body.clientWidth || $document[0].documentElement.clientWidth;\n            var windowHeight = body.clientHeight || $document[0].documentElement.clientHeight;\n\n            var width = el[0].offsetWidth;\n            var height = el[0].offsetHeight;\n\n            var left = parseInt((windowWidth - width) / 2, 10);\n\n            var top = 0;\n            if (height < windowHeight) {\n                top = parseInt((windowHeight - height) / 4, 10);\n            }\n\n            var modalPos = options.modalPos = options.modalPos || {};\n\n            modalPos.left = left;\n            modalPos.position = 'fixed';\n\n            return modalPos;\n        }\n\n        $document.on('keydown', function (evt) {\n            var modal = openedWindows.top();\n            if (!modal) {\n                return;\n            }\n            if (evt.which === 27) {\n                if (modal.value.keyboard) {\n                    $rootScope.$apply(function () {\n                        $modalStack.dismiss(modal.key);\n                    });\n                }\n            } else if (evt.which === 9) {\n                var list = $modalStack.loadFocusElementList(modal);\n                var focusChanged = false;\n                if (evt.shiftKey) {\n                    if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {\n                        focusChanged = $modalStack.focusLastFocusableElement(list);\n                    }\n                } else {\n                    if ($modalStack.isFocusInLastItem(evt, list)) {\n                        focusChanged = $modalStack.focusFirstFocusableElement(list);\n                    }\n                }\n\n                if (focusChanged) {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n                }\n            }\n        });\n\n        $modalStack.loadFocusElementList = function (modalWindow) {\n            if (!modalWindow) {\n                return [];\n            }\n            var modalDomE1 = modalWindow.value.modalDomEl;\n            if (modalDomE1 && modalDomE1.length) {\n                var elements = modalDomE1[0].querySelectorAll(tabbableSelector);\n                return [].concat(_toConsumableArray(elements)).filter(function (e) {\n                    return isVisible(e);\n                });\n            }\n            return [];\n        };\n\n        $modalStack.isModalFocused = function (evt, modalWindow) {\n            if (evt && modalWindow) {\n                var modalDomEl = modalWindow.value.modalDomEl;\n                if (modalDomEl && modalDomEl.length) {\n                    return (evt.target || evt.srcElement) === modalDomEl[0];\n                }\n            }\n            return false;\n        };\n\n        $modalStack.isFocusInLastItem = function (evt, list) {\n            if (list.length > 0) {\n                return (evt.target || evt.srcElement) === list[list.length - 1];\n            }\n            return false;\n        };\n\n        $modalStack.focusFirstFocusableElement = function (list) {\n            if (list.length > 0) {\n                list[0].focus();\n                return true;\n            }\n            return false;\n        };\n\n        $modalStack.focusLastFocusableElement = function (list) {\n            if (list.length > 0) {\n                list[list.length - 1].focus();\n                return true;\n            }\n            return false;\n        };\n\n        $modalStack.isFocusInFirstItem = function (evt, list) {\n            if (list.length > 0) {\n                return (evt.target || evt.srcElement) === list[0];\n            }\n            return false;\n        };\n\n        $modalStack.open = function (modalInstance, options) {\n            modalInstance.options = {\n                deferred: options.deferred,\n                modalScope: options.scope,\n                backdrop: options.backdrop,\n                keyboard: options.keyboard,\n                closeOnClick: options.closeOnClick,\n                id: options.id\n            };\n            openedWindows.add(modalInstance, modalInstance.options);\n\n            var currBackdropIndex = backdropIndex();\n\n            var backdropDomEl = void 0;\n\n            if (options.backdrop) {\n                var backdropScope = $rootScope.$new(true);\n                backdropDomEl = $compile('<div modal-backdrop></div>')(backdropScope);\n                openedWindows.top().value.backdropDomEl = backdropDomEl;\n                openedWindows.top().value.backdropScope = backdropScope;\n            }\n\n            if (openedWindows.length() === 1) {\n                angular.element($window).on('resize', resizeHandler);\n            }\n\n            var classes = [];\n            if (options.windowClass) {\n                classes.push(options.windowClass);\n            }\n\n            if (options.size) {\n                classes.push(options.size);\n            }\n\n            if (!options.backdrop) {\n                classes.push('without-overlay');\n            }\n\n            var modalDomEl = angular.element('<div modal-window></div>').attr({\n                'window-class': classes.join(' '),\n                index: openedWindows.length() - 1\n            });\n\n            modalDomEl.html(options.content);\n            $compile(modalDomEl)(options.scope);\n\n            openedWindows.top().value.modalDomEl = modalDomEl;\n\n            return $timeout(function () {\n                // let the directives kick in\n                options.scope.$apply();\n\n                // Attach, measure, remove\n                var body = $document.find('body').eq(0);\n                body.prepend(modalDomEl);\n                var modalPos = getModalCenter(modalInstance, true);\n                modalDomEl.detach();\n\n                //\n                // Apply the style with .css() to conform to content security policy\n                //\n                modalDomEl.css({\n                    visibility: 'visible',\n                    left: '${modalPos.left}px',\n                    display: 'block',\n                    position: '${modalPos.position}',\n                    'z-index': '' // Clear the z-index that was previously set above\n                });\n\n                var promises = [];\n\n                if (backdropDomEl) {\n                    //\n                    // Enusre this is display: block\n                    // NOTE: this must be done AFTER $compile or CSP errors are triggered,\n                    //       and after $timeout or it is just replaced by the template.\n                    //\n                    backdropDomEl.css({\n                        display: 'block'\n                    });\n                    promises.push($animate.enter(backdropDomEl, body, body[0].lastChild));\n                }\n\n                var modalParent = backdropDomEl || body;\n\n                promises.push($animate.enter(modalDomEl, modalParent, modalParent[0].lastChild));\n\n                if (isMobile) {\n                    originalScrollPos = $window.pageYOffset;\n                    var html = $document.find('html').eq(0);\n                    html.addClass(OPENED_MODAL_CLASS);\n                }\n\n                body.addClass(OPENED_MODAL_CLASS);\n\n                // Only for no backdrop modals\n                if (!options.backdrop) {\n                    options.scope.$watch(function () {\n                        return Math.floor(modalDomEl[0].offsetHeight / 10);\n                    }, resizeHandler);\n                }\n\n                return $q.all(promises).then(function () {\n                    var focusedElem = modalDomEl[0].querySelector('[autofocus]') || modalDomEl[0];\n                    var y = modalParent[0].scrollTop;\n                    focusedElem.focus();\n                    modalParent[0].scrollTop = y;\n                });\n            });\n        };\n\n        $modalStack.reposition = function (modalInstance) {\n            var modalWindow = openedWindows.get(modalInstance).value;\n            if (modalWindow) {\n                var modalDomEl = modalWindow.modalDomEl;\n                var modalPos = getModalCenter(modalInstance);\n                modalDomEl.css('left', modalPos.left + 'px');\n                modalDomEl.css('position', modalPos.position);\n                return modalPos;\n            }\n            return {};\n        };\n\n        $modalStack.close = function (modalInstance, result) {\n            var modalWindow = openedWindows.get(modalInstance);\n            if (modalWindow) {\n                modalWindow.value.deferred.resolve(result);\n                return modalInstance.opened.then(function () {\n                    removeModalWindow(modalInstance);\n                });\n            }\n            return $q.resolve();\n        };\n\n        $modalStack.dismiss = function (modalInstance, reason) {\n            var modalWindow = openedWindows.get(modalInstance);\n            if (modalWindow) {\n                modalWindow.value.deferred.reject(reason);\n                return modalInstance.opened.then(function () {\n                    removeModalWindow(modalInstance);\n                });\n            }\n            return $q.resolve();\n        };\n\n        $modalStack.dismissAll = function (reason) {\n            var leaveOpenIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n            return $q.all(openedWindows.keys().filter(function (key) {\n                return leaveOpenIds.indexOf(openedWindows.get(key).value.id) === -1;\n            }).map(function (key) {\n                return $modalStack.dismiss(key, reason);\n            }));\n        };\n\n        $modalStack.getTop = function () {\n            return openedWindows.top();\n        };\n\n        $modalStack.isOpen = function (id) {\n            return openedWindows.keys().some(function (key) {\n                return skipIds.indexOf(openedWindows.get().value.id) !== -1;\n            });\n        };\n\n        return $modalStack;\n    }]).provider('$modal', function () {\n        'ngInject';\n\n        var _this = this;\n\n        this.options = {\n            backdrop: true, // can be also false or 'static'\n            keyboard: true,\n            closeOnClick: true,\n            id: 0\n        };\n\n        this.$get = ['$injector', '$rootScope', '$q', '$http', '$templateCache', '$controller', '$modalStack', function ($injector, $rootScope, $q, $http, $templateCache, $controller, $modalStack) {\n            'ngInject';\n\n            var $modal = {};\n\n            function getTemplatePromise(options) {\n                if (options.template) {\n                    return $q.resolve(options.template);\n                }\n                return $http.get(options.templateUrl, {\n                    cache: $templateCache\n                }).then(function (result) {\n                    return result.data;\n                });\n            }\n\n            function getResolvePromises(resolves) {\n                var promisesArr = [];\n                angular.forEach(resolves, function (value) {\n                    if (angular.isFunction(value) || angular.isArray(value)) {\n                        promisesArr.push($q.when($injector.invoke(value)));\n                    }\n                });\n                return promisesArr;\n            }\n\n            $modal.open = function (modalOpts) {\n                var modalResultDeferred = $q.defer();\n                var modalOpenedDeferred = $q.defer();\n\n                // prepare an instance of a modal to be injected into controllers and returned to a caller\n                var modalInstance = {\n                    result: modalResultDeferred.promise,\n                    opened: modalOpenedDeferred.promise,\n                    close: function close(result) {\n                        $modalStack.close(modalInstance, result);\n                    },\n                    dismiss: function dismiss(reason) {\n                        $modalStack.dismiss(modalInstance, reason);\n                    },\n                    reposition: function reposition() {\n                        $modalStack.reposition(modalInstance);\n                    }\n                };\n\n                // merge and clean up options\n                var modalOptions = angular.extend({}, _this.options, modalOpts);\n                modalOptions.resolve = modalOptions.resolve || {};\n\n                // verify options\n                if (!modalOptions.template && !modalOptions.templateUrl) {\n                    throw new Error('One of template or templateUrl options is required.');\n                }\n\n                var templateAndResolvePromise = $q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));\n\n                var openedPromise = templateAndResolvePromise.then(function (tplAndVars) {\n                    var modalScope = (modalOptions.scope || $rootScope).$new();\n                    modalScope.$close = modalInstance.close;\n                    modalScope.$dismiss = modalInstance.dismiss;\n\n                    var ctrlInstance = void 0;\n                    var ctrlLocals = {};\n                    var resolveIter = 1;\n\n                    // controllers\n                    if (modalOptions.controller) {\n                        ctrlLocals.$scope = modalScope;\n                        ctrlLocals.$modalInstance = modalInstance;\n                        angular.forEach(modalOptions.resolve, function (value, key) {\n                            ctrlLocals[key] = tplAndVars[resolveIter++];\n                        });\n\n                        ctrlInstance = $controller(modalOptions.controller, ctrlLocals);\n                        if (modalOptions.controllerAs) {\n                            modalScope[modalOptions.controllerAs] = ctrlInstance;\n                        }\n                    }\n\n                    return $modalStack.open(modalInstance, {\n                        scope: modalScope,\n                        deferred: modalResultDeferred,\n                        content: tplAndVars[0],\n                        backdrop: modalOptions.backdrop,\n                        keyboard: modalOptions.keyboard,\n                        windowClass: modalOptions.windowClass,\n                        size: modalOptions.size,\n                        closeOnClick: modalOptions.closeOnClick,\n                        id: modalOptions.id\n                    });\n                }, function (reason) {\n                    modalResultDeferred.reject(reason);\n                    return $q.reject(reason);\n                });\n\n                openedPromise.then(function () {\n                    modalOpenedDeferred.resolve();\n                }, function (reason) {\n                    modalOpenedDeferred.reject(reason);\n                });\n\n                return modalInstance;\n            };\n            return $modal;\n        }];\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.modal\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/modal/backdrop.html\", \"<div ng-animate-children=\\\"true\\\"\\n    class=\\\"reveal-overlay ng-animate\\\"\\n    ng-click=\\\"close($event)\\\"\\n    ></div>\\n\");\n            $templateCache.put(\"template/modal/window.html\", \"<div tabindex=\\\"-1\\\" class=\\\"reveal {{ windowClass }}\\\">\\n  <div ng-transclude></div>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.offcanvas', []).directive('offCanvasWrapper', ['$window', function ($window) {\n        'ngInject';\n\n        return {\n            scope: {},\n            bindToController: { disableAutoClose: '=' },\n            controllerAs: 'vm',\n            restrict: 'C',\n            controller: ['$scope', '$element', function controller($scope, $element) {\n                'ngInject';\n\n                var $ctrl = this;\n\n                var left = angular.element($element[0].querySelector('.position-left'));\n                var right = angular.element($element[0].querySelector('.position-right'));\n                var inner = angular.element($element[0].querySelector('.off-canvas-wrapper-inner'));\n                // var overlay = angular.element(); js-off-canvas-exit\n                var exitOverlay = angular.element('<div class=\"js-off-canvas-exit\"></div>');\n                inner.append(exitOverlay);\n\n                exitOverlay.on('click', function () {\n                    $ctrl.hide();\n                });\n\n                $ctrl.leftToggle = function () {\n                    inner && inner.toggleClass('is-off-canvas-open');\n                    inner && inner.toggleClass('is-open-left');\n                    left && left.toggleClass('is-open');\n                    exitOverlay.addClass('is-visible');\n                    // is-visible\n                };\n\n                $ctrl.rightToggle = function () {\n                    inner && inner.toggleClass('is-off-canvas-open');\n                    inner && inner.toggleClass('is-open-right');\n                    right && right.toggleClass('is-open');\n                    exitOverlay.addClass('is-visible');\n                };\n\n                $ctrl.hide = function () {\n                    inner && inner.removeClass('is-open-left');\n                    inner && inner.removeClass('is-open-right');\n                    left && left.removeClass('is-open');\n                    right && right.removeClass('is-open');\n                    inner && inner.removeClass('is-off-canvas-open');\n                    exitOverlay.removeClass('is-visible');\n                };\n\n                var win = angular.element($window);\n\n                win.bind('resize.body', $ctrl.hide);\n\n                $scope.$on('$destroy', function () {\n                    win.unbind('resize.body', $ctrl.hide);\n                });\n            }]\n        };\n    }]).directive('leftOffCanvasToggle', function () {\n        'ngInject';\n\n        return {\n            require: '^^offCanvasWrapper',\n            restrict: 'C',\n            link: function link($scope, element, attrs, offCanvasWrapper) {\n                element.on('click', function () {\n                    offCanvasWrapper.leftToggle();\n                });\n            }\n        };\n    }).directive('rightOffCanvasToggle', function () {\n        'ngInject';\n\n        return {\n            require: '^^offCanvasWrapper',\n            restrict: 'C',\n            link: function link($scope, element, attrs, offCanvasWrapper) {\n                element.on('click', function () {\n                    offCanvasWrapper.rightToggle();\n                });\n            }\n        };\n    }).directive('offCanvas', function () {\n        'ngInject';\n\n        return {\n            require: { 'offCanvasWrapper': '^^offCanvasWrapper' },\n            restrict: 'C',\n            bindToController: {},\n            scope: {},\n            controllerAs: 'vm',\n            controller: function controller() {}\n        };\n    }).directive('li', function () {\n        'ngInject';\n\n        return {\n            require: '?^^offCanvas',\n            restrict: 'E',\n            link: function link($scope, element, attrs, offCanvas) {\n                if (!offCanvas || offCanvas.offCanvasWrapper.disableAutoClose) {\n                    return;\n                }\n                element.on('click', function () {\n                    offCanvas.offCanvasWrapper.hide();\n                });\n            }\n        };\n    });\n\n    function orbit($element) {\n        'ngInject';\n\n        var _this2 = this;\n\n        this.container = null;\n        this.$element = $element;\n        $element.css({ overflow: 'hidden' });\n        this.setContainer = function (container_) {\n            _this2.container = container_;\n        };\n    }\n\n    function orbitBullets($element) {\n        'ngInject';\n\n        var vm = this;\n    }\n\n    function orbitContainer($element, $interval, $scope, $swipe) {\n        'ngInject';\n\n        var _this3 = this;\n\n        this.slides = [];\n        this.currentIdx = 0;\n        this.skipInterval = true;\n        $element.css({ position: 'relative' });\n        this.addSlide = function (slide) {\n            _this3.slides.push(slide);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = _this3.slides[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var _slide = _step.value;\n\n                    _slide.element.css({ width: 100 / _this3.slides.length + '%' });\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            $element.css({ width: _this3.slides.length * 100 + '%' });\n        };\n        this.activateState = function (index) {\n            _this3.currentIdx = index;\n            var pct = 100 * _this3.currentIdx / _this3.slides.length;\n            $element.css({ transform: 'translateX(' + -pct + '%)' });\n        };\n        this.prevState = function () {\n            $scope.$apply(function () {\n                if (_this3.currentIdx > 0) {\n                    _this3.activateState((_this3.currentIdx - 1) % _this3.slides.length);\n                } else {\n                    _this3.activateState(_this3.slides.length - 1);\n                }\n            });\n        };\n        this.nextState = function () {\n            $scope.$apply(function () {\n                _this3.activateState((_this3.currentIdx + 1) % _this3.slides.length);\n            });\n        };\n        this.stopAutoPlay = function () {\n            $interval.cancel(_this3.autoSlider);\n            _this3.autoSlider = null;\n        };\n        this.restartTimer = function () {\n            _this3.stopAutoPlay();\n            _this3.autoSlider = $interval(function () {\n                _this3.activateState(++_this3.currentIdx % _this3.slides.length);\n            }, 5000);\n        };\n        $element.on('mouseenter', this.stopAutoPlay);\n        $element.on('mouseleave', this.restartTimer);\n        this.$onDestroy = function () {\n            _this3.stopAutoPlay();\n            $element.off('mouseenter', _this3.stopAutoPlay);\n            $element.off('mouseleave', _this3.restartTimer);\n        };\n\n        var startPos = null;\n        var nextIdx = this.currentIdx;\n        var vm = this;\n\n        $swipe.bind($element, {\n            start: function start(pos) {\n                $element.addClass('touching');\n                _this3.stopAutoPlay();\n                startPos = pos;\n            },\n            move: function move(pos) {\n                var dist = startPos.x - pos.x;\n                var width = _this3.orbit.$element[0].offsetWidth;\n                var pctDist = 100 * dist / width;\n                var lastPct = 100 * _this3.currentIdx / _this3.slides.length;\n                var pct = lastPct + pctDist / _this3.slides.length;\n                var roundFn = pos.x > startPos.x ? Math.floor : Math.ceil;\n\n                nextIdx = roundFn(pct / (100 / _this3.slides.length));\n\n                $element.css({ transform: 'translateX(' + -pct + '%)' });\n            },\n            end: function end(pos) {\n                $element.removeClass('touching');\n\n                if (nextIdx >= _this3.slides.length) {\n                    nextIdx = _this3.slides.length - 1;\n                } else if (nextIdx < 0) {\n                    nextIdx = 0;\n                }\n\n                _this3.activateState(nextIdx);\n                _this3.restartTimer();\n                $scope.$apply();\n            },\n            cancel: function cancel() {\n                _this3.restartTimer();\n                $element.removeClass('touching');\n            }\n        });\n        this.$onInit = function () {\n            _this3.orbit.setContainer(_this3);\n            // this.restartTimer();\n            $scope.$watch(function () {\n                return _this3.currentIdx;\n            }, _this3.restartTimer);\n        };\n    }\n    function orbitSlide($element) {\n        'ngInject';\n\n        var vm = this;\n        // transform: translateX(-50%);\n        $element.css({ overflow: 'hidden', float: 'left', position: 'relative' });\n        this.$onInit = function () {\n            vm.orbitContainer.addSlide({ element: $element });\n        };\n    }\n\n    function orbitPrevious($element) {\n        'ngInject';\n\n        var vm = this;\n        $element.css({ cursor: 'pointer' });\n        this.$onInit = function () {\n            $element.on('click', function () {\n                vm.orbit.container.prevState();\n            });\n        };\n    }\n\n    function orbitNext($element) {\n        'ngInject';\n\n        var vm = this;\n        $element.css({ cursor: 'pointer' });\n        this.$onInit = function () {\n            $element.on('click', function () {\n                vm.orbit.container.nextState();\n            });\n        };\n    }\n\n    angular.module('mm.foundation.orbit', ['ngTouch']).directive('orbit', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            controller: orbit\n        };\n    }).directive('orbitContainer', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbit: '^^orbit' },\n            controller: orbitContainer,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitSlide', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbitContainer: '^^orbitContainer' },\n            controller: orbitSlide,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitPrevious', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbit: '^^orbit' },\n            controller: orbitPrevious,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitNext', function () {\n        return {\n            scope: {},\n            restrict: 'C',\n            require: { orbit: '^^orbit' },\n            controller: orbitNext,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n    }).directive('orbitBullets', function () {\n        return {\n            scope: {},\n            restrict: 'EC',\n            require: { orbit: '^^orbit' },\n            controller: orbitBullets,\n            controllerAs: 'vm',\n            bindToController: true,\n            template: '\\n        <button\\n            ng-click=\"vm.orbit.container.activateState($index)\"\\n            ng-repeat=\"slide in vm.orbit.container.slides\"\\n            ng-class=\"{\\'is-active\\': $index === vm.orbit.container.currentIdx}\">\\n            </button>\\n    '\n        };\n    });\n\n    angular.module('mm.foundation.pagination', []).controller('PaginationController', ['$scope', '$attrs', '$parse', '$interpolate', function ($scope, $attrs, $parse, $interpolate) {\n        var self = this,\n            setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n\n        this.init = function (defaultItemsPerPage) {\n            if ($attrs.itemsPerPage) {\n                $scope.$parent.$watch($parse($attrs.itemsPerPage), function (value) {\n                    self.itemsPerPage = parseInt(value, 10);\n                    $scope.totalPages = self.calculateTotalPages();\n                });\n            } else {\n                this.itemsPerPage = defaultItemsPerPage;\n            }\n        };\n\n        this.noPrevious = function () {\n            return this.page === 1;\n        };\n        this.noNext = function () {\n            return this.page === $scope.totalPages;\n        };\n\n        this.isActive = function (page) {\n            return this.page === page;\n        };\n\n        this.calculateTotalPages = function () {\n            var totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / this.itemsPerPage);\n            return Math.max(totalPages || 0, 1);\n        };\n\n        this.getAttributeValue = function (attribute, defaultValue, interpolate) {\n            return angular.isDefined(attribute) ? interpolate ? $interpolate(attribute)($scope.$parent) : $scope.$parent.$eval(attribute) : defaultValue;\n        };\n\n        this.render = function () {\n            this.page = parseInt($scope.page, 10) || 1;\n            if (this.page > 0 && this.page <= $scope.totalPages) {\n                $scope.pages = this.getPages(this.page, $scope.totalPages);\n            }\n        };\n\n        $scope.selectPage = function (page) {\n            if (!self.isActive(page) && page > 0 && page <= $scope.totalPages) {\n                $scope.page = page;\n                $scope.onSelectPage({\n                    page: page\n                });\n            }\n        };\n\n        $scope.$watch('page', function () {\n            self.render();\n        });\n\n        $scope.$watch('totalItems', function () {\n            $scope.totalPages = self.calculateTotalPages();\n        });\n\n        $scope.$watch('totalPages', function (value) {\n            setNumPages($scope.$parent, value); // Readonly variable\n\n            if (self.page > value) {\n                $scope.selectPage(value);\n            } else {\n                self.render();\n            }\n        });\n    }]).constant('paginationConfig', {\n        itemsPerPage: 10,\n        boundaryLinks: false,\n        directionLinks: true,\n        firstText: 'First',\n        previousText: 'Previous',\n        nextText: 'Next',\n        lastText: 'Last',\n        rotate: true\n    }).directive('pagination', ['$parse', 'paginationConfig', function ($parse, paginationConfig) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                page: '=',\n                totalItems: '=',\n                onSelectPage: ' &'\n            },\n            controller: 'PaginationController',\n            templateUrl: 'template/pagination/pagination.html',\n            replace: true,\n            link: function link(scope, element, attrs, paginationCtrl) {\n\n                // Setup configuration parameters\n                var maxSize,\n                    boundaryLinks = paginationCtrl.getAttributeValue(attrs.boundaryLinks, paginationConfig.boundaryLinks),\n                    directionLinks = paginationCtrl.getAttributeValue(attrs.directionLinks, paginationConfig.directionLinks),\n                    firstText = paginationCtrl.getAttributeValue(attrs.firstText, paginationConfig.firstText, true),\n                    previousText = paginationCtrl.getAttributeValue(attrs.previousText, paginationConfig.previousText, true),\n                    nextText = paginationCtrl.getAttributeValue(attrs.nextText, paginationConfig.nextText, true),\n                    lastText = paginationCtrl.getAttributeValue(attrs.lastText, paginationConfig.lastText, true),\n                    rotate = paginationCtrl.getAttributeValue(attrs.rotate, paginationConfig.rotate);\n\n                paginationCtrl.init(paginationConfig.itemsPerPage);\n\n                if (attrs.maxSize) {\n                    scope.$parent.$watch($parse(attrs.maxSize), function (value) {\n                        maxSize = parseInt(value, 10);\n                        paginationCtrl.render();\n                    });\n                }\n\n                // Create page object used in template\n                function makePage(number, text, isActive, isDisabled) {\n                    return {\n                        number: number,\n                        text: text,\n                        active: isActive,\n                        disabled: isDisabled\n                    };\n                }\n\n                paginationCtrl.getPages = function (currentPage, totalPages) {\n                    var pages = [];\n\n                    // Default page limits\n                    var startPage = 1,\n                        endPage = totalPages;\n                    var isMaxSized = angular.isDefined(maxSize) && maxSize < totalPages;\n\n                    // recompute if maxSize\n                    if (isMaxSized) {\n                        if (rotate) {\n                            // Current page is displayed in the middle of the visible ones\n                            startPage = Math.max(currentPage - Math.floor(maxSize / 2), 1);\n                            endPage = startPage + maxSize - 1;\n\n                            // Adjust if limit is exceeded\n                            if (endPage > totalPages) {\n                                endPage = totalPages;\n                                startPage = endPage - maxSize + 1;\n                            }\n                        } else {\n                            // Visible pages are paginated with maxSize\n                            startPage = (Math.ceil(currentPage / maxSize) - 1) * maxSize + 1;\n\n                            // Adjust last page if limit is exceeded\n                            endPage = Math.min(startPage + maxSize - 1, totalPages);\n                        }\n                    }\n\n                    // Add page number links\n                    for (var number = startPage; number <= endPage; number++) {\n                        var page = makePage(number, number, paginationCtrl.isActive(number), false);\n                        pages.push(page);\n                    }\n\n                    // Add links to move between page sets\n                    if (isMaxSized && !rotate) {\n                        if (startPage > 1) {\n                            var previousPageSet = makePage(startPage - 1, '...', false, false);\n                            pages.unshift(previousPageSet);\n                        }\n\n                        if (endPage < totalPages) {\n                            var nextPageSet = makePage(endPage + 1, '...', false, false);\n                            pages.push(nextPageSet);\n                        }\n                    }\n\n                    // Add previous & next links\n                    if (directionLinks) {\n                        var previousPage = makePage(currentPage - 1, previousText, false, paginationCtrl.noPrevious());\n                        pages.unshift(previousPage);\n\n                        var nextPage = makePage(currentPage + 1, nextText, false, paginationCtrl.noNext());\n                        pages.push(nextPage);\n                    }\n\n                    // Add first & last links\n                    if (boundaryLinks) {\n                        var firstPage = makePage(1, firstText, false, paginationCtrl.noPrevious());\n                        pages.unshift(firstPage);\n\n                        var lastPage = makePage(totalPages, lastText, false, paginationCtrl.noNext());\n                        pages.push(lastPage);\n                    }\n\n                    return pages;\n                };\n            }\n        };\n    }]).constant('pagerConfig', {\n        itemsPerPage: 10,\n        previousText: '« Previous',\n        nextText: 'Next »',\n        align: true\n    }).directive('pager', ['pagerConfig', function (pagerConfig) {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            scope: {\n                page: '=',\n                totalItems: '=',\n                onSelectPage: ' &'\n            },\n            controller: 'PaginationController',\n            templateUrl: 'template/pagination/pager.html',\n            replace: true,\n            link: function link(scope, element, attrs, paginationCtrl) {\n\n                // Setup configuration parameters\n                var previousText = paginationCtrl.getAttributeValue(attrs.previousText, pagerConfig.previousText, true),\n                    nextText = paginationCtrl.getAttributeValue(attrs.nextText, pagerConfig.nextText, true),\n                    align = paginationCtrl.getAttributeValue(attrs.align, pagerConfig.align);\n\n                paginationCtrl.init(pagerConfig.itemsPerPage);\n\n                // Create page object used in template\n                function makePage(number, text, isDisabled, isPrevious, isNext) {\n                    return {\n                        number: number,\n                        text: text,\n                        disabled: isDisabled,\n                        previous: align && isPrevious,\n                        next: align && isNext\n                    };\n                }\n\n                paginationCtrl.getPages = function (currentPage) {\n                    return [makePage(currentPage - 1, previousText, paginationCtrl.noPrevious(), true, false), makePage(currentPage + 1, nextText, paginationCtrl.noNext(), false, true)];\n                };\n            }\n        };\n    }]);\n\n    (function () {\n        angular.module(\"mm.foundation.pagination\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/pagination/pager.html\", \"<ul class=\\\"pagination\\\">\\n  <li ng-repeat=\\\"page in pages\\\" class=\\\"arrow\\\" ng-class=\\\"{unavailable: page.disabled, left: page.previous, right: page.next}\\\"><a ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a></li>\\n</ul>\\n\");\n            $templateCache.put(\"template/pagination/pagination.html\", \"<ul class=\\\"pagination\\\" role=\\\"navigation\\\" aria-label=\\\"Pagination\\\">\\n  <li ng-repeat=\\\"page in pages\\\"\\n    ng-class=\\\"{\\n        \\'pagination-previous\\': $first,\\n        \\'pagination-next\\': $last,\\n        current: page.active,\\n        disabled: page.disabled\\n        }\\\">\\n    <a ng-if=\\\"!page.active\\\" ng-click=\\\"selectPage(page.number)\\\">{{page.text}}</a>\\n    <span ng-if=\\\"page.active\\\">{{page.text}}</span>\\n  </li>\\n</ul>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.position', [])\n\n    /**\n     * A set of utility methods that can be use to retrieve position of DOM elements.\n     * It is meant to be used where we need to absolute-position DOM elements in\n     * relation to other, existing elements (this is the case for tooltips, popovers,\n     * typeahead suggestions etc.).\n     */\n    .factory('$position', ['$document', '$window', function ($document, $window) {\n        'ngInject';\n\n        function getStyle(el, cssprop) {\n            if (el.currentStyle) {\n                //IE\n                return el.currentStyle[cssprop];\n            } else if ($window.getComputedStyle) {\n                return $window.getComputedStyle(el)[cssprop];\n            }\n            // finally try and get inline style\n            return el.style[cssprop];\n        }\n\n        /**\n         * Checks if a given element is statically positioned\n         * @param element - raw DOM element\n         */\n        function isStaticPositioned(element) {\n            return (getStyle(element, \"position\") || 'static') === 'static';\n        }\n\n        /**\n         * returns the closest, non-statically positioned parentOffset of a given element\n         * @param element\n         */\n        var parentOffsetEl = function parentOffsetEl(element) {\n            var docDomEl = $document[0];\n            var offsetParent = element.offsetParent || docDomEl;\n            while (offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent)) {\n                offsetParent = offsetParent.offsetParent;\n            }\n            return offsetParent || docDomEl;\n        };\n\n        return {\n            /**\n             * Provides read-only equivalent of jQuery's position function:\n             * http://api.jquery.com/position/\n             */\n            position: function position(element) {\n                var elBCR = this.offset(element);\n                var offsetParentBCR = {\n                    top: 0,\n                    left: 0\n                };\n                var offsetParentEl = parentOffsetEl(element[0]);\n                if (offsetParentEl != $document[0]) {\n                    offsetParentBCR = this.offset(angular.element(offsetParentEl));\n                    offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n                    offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n                }\n\n                var boundingClientRect = element[0].getBoundingClientRect();\n                return {\n                    width: boundingClientRect.width || element.prop('offsetWidth'),\n                    height: boundingClientRect.height || element.prop('offsetHeight'),\n                    top: elBCR.top - offsetParentBCR.top,\n                    left: elBCR.left - offsetParentBCR.left\n                };\n            },\n\n            /**\n             * Provides read-only equivalent of jQuery's offset function:\n             * http://api.jquery.com/offset/\n             */\n            offset: function offset(element) {\n                var boundingClientRect = element[0].getBoundingClientRect();\n                return {\n                    width: boundingClientRect.width || element.prop('offsetWidth'),\n                    height: boundingClientRect.height || element.prop('offsetHeight'),\n                    top: boundingClientRect.top + ($window.pageYOffset || $document[0].body.scrollTop || $document[0].documentElement.scrollTop),\n                    left: boundingClientRect.left + ($window.pageXOffset || $document[0].body.scrollLeft || $document[0].documentElement.scrollLeft)\n                };\n            }\n        };\n    }]);\n\n    angular.module('mm.foundation.progressbar', []).constant('progressConfig', {\n        animate: true,\n        max: 100\n    }).controller('ProgressController', ['$scope', '$attrs', 'progressConfig', '$animate', function ($scope, $attrs, progressConfig, $animate) {\n        'ngInject';\n\n        var self = this,\n            bars = [],\n            max = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : progressConfig.max,\n            animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\n\n        this.addBar = function (bar, element) {\n            var oldValue = 0,\n                index = bar.$parent.$index;\n            if (angular.isDefined(index) && bars[index]) {\n                oldValue = bars[index].value;\n            }\n            bars.push(bar);\n\n            this.update(element, bar.value, oldValue);\n\n            bar.$watch('value', function (value, oldValue) {\n                if (value !== oldValue) {\n                    self.update(element, value, oldValue);\n                }\n            });\n\n            bar.$on('$destroy', function () {\n                self.removeBar(bar);\n            });\n        };\n\n        // Update bar element width\n        this.update = function (element, newValue, oldValue) {\n            var percent = this.getPercentage(newValue);\n\n            if (animate) {\n                element.css('width', this.getPercentage(oldValue) + '%');\n                $animate.animate(element, {\n                    'width': this.getPercentage(oldValue) + '%'\n                }, {\n                    width: percent + '%'\n                });\n                // $transition(element, {\n                //     width: percent + '%'\n                // });\n            } else {\n                element.css({\n                    'transition': 'none',\n                    'width': percent + '%'\n                });\n            }\n        };\n\n        this.removeBar = function (bar) {\n            bars.splice(bars.indexOf(bar), 1);\n        };\n\n        this.getPercentage = function (value) {\n            return Math.round(100 * value / max);\n        };\n    }]).directive('progress', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            controller: 'ProgressController',\n            require: 'progress',\n            scope: {},\n            template: '<div class=\"progress\" ng-transclude></div>'\n            //templateUrl: 'template/progressbar/progress.html' // Works in AngularJS 1.2\n        };\n    }).directive('bar', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            require: '^progress',\n            scope: {\n                value: '=',\n                type: '@'\n            },\n            templateUrl: 'template/progressbar/bar.html',\n            link: function link(scope, element, attrs, progressCtrl) {\n                progressCtrl.addBar(scope, element);\n            }\n        };\n    }).directive('progressbar', function () {\n        return {\n            restrict: 'EA',\n            replace: true,\n            transclude: true,\n            controller: 'ProgressController',\n            scope: {\n                value: '=',\n                type: '@'\n            },\n            templateUrl: 'template/progressbar/progressbar.html',\n            link: function link(scope, element, attrs, progressCtrl) {\n                progressCtrl.addBar(scope, angular.element(element.children()[0]));\n            }\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.progressbar\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/progressbar/bar.html\", \"<span class=\\\"meter\\\" ng-transclude></span>\\n\");\n            $templateCache.put(\"template/progressbar/progress.html\", \"<div class=\\\"progress\\\" ng-class=\\\"type\\\" ng-transclude></div>\\n\");\n            $templateCache.put(\"template/progressbar/progressbar.html\", \"<div class=\\\"progress\\\" role=\\\"progressbar\\\" ng-class=\\\"type\\\">\\n  <span class=\\\"progress-meter\\\"><p class=\\\"progress-meter-text\\\" ng-transclude></p></span>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module('mm.foundation.rating', []).constant('ratingConfig', {\n        max: 5,\n        stateOn: null,\n        stateOff: null\n    }).controller('RatingController', ['$scope', '$attrs', '$parse', 'ratingConfig', function ($scope, $attrs, $parse, ratingConfig) {\n\n        this.maxRange = angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max;\n        this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;\n        this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;\n\n        this.createRateObjects = function (states) {\n            var defaultOptions = {\n                stateOn: this.stateOn,\n                stateOff: this.stateOff\n            };\n\n            for (var i = 0, n = states.length; i < n; i++) {\n                states[i] = angular.extend({ index: i }, defaultOptions, states[i]);\n            }\n            return states;\n        };\n\n        // Get objects used in template\n        $scope.range = angular.isDefined($attrs.ratingStates) ? this.createRateObjects(angular.copy($scope.$parent.$eval($attrs.ratingStates))) : this.createRateObjects(new Array(this.maxRange));\n\n        $scope.rate = function (value) {\n            if ($scope.value !== value && !$scope.readonly) {\n                $scope.value = value;\n            }\n        };\n\n        $scope.enter = function (value) {\n            if (!$scope.readonly) {\n                $scope.val = value;\n            }\n            $scope.onHover({ value: value });\n        };\n\n        $scope.reset = function () {\n            $scope.val = angular.copy($scope.value);\n            $scope.onLeave();\n        };\n\n        $scope.$watch('value', function (value) {\n            $scope.val = value;\n        });\n\n        $scope.readonly = false;\n        if ($attrs.readonly) {\n            $scope.$parent.$watch($parse($attrs.readonly), function (value) {\n                $scope.readonly = !!value;\n            });\n        }\n    }]).directive('rating', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                value: '=',\n                onHover: '&',\n                onLeave: '&'\n            },\n            controller: 'RatingController',\n            templateUrl: 'template/rating/rating.html',\n            replace: true\n        };\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.rating\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/rating/rating.html\", \"<span ng-mouseleave=\\\"reset()\\\">\\n  <i ng-repeat=\\\"r in range\\\" ng-mouseenter=\\\"enter($index + 1)\\\" ng-click=\\\"rate($index + 1)\\\" class=\\\"fa\\\"\\n    ng-class=\\\"$index < val && (r.stateOn || \\'fa-star\\') || (r.stateOff || \\'fa-star-o\\')\\\"></i>\\n</span>\\n\");\n        }]);\n    })();\n    /**\n     * @ngdoc overview\n     * @name mm.foundation.tabs\n     *\n     * @description\n     * AngularJS version of the tabs directive.\n     */\n\n    angular.module('mm.foundation.tabs', []).controller('TabsetController', ['$scope', function TabsetCtrl($scope) {\n        'ngInject';\n\n        var ctrl = this;\n        var tabs = ctrl.tabs = $scope.tabs = [];\n\n        if (angular.isUndefined($scope.openOnLoad)) {\n            $scope.openOnLoad = true;\n        }\n\n        ctrl.select = function (tab) {\n            angular.forEach(tabs, function (tab) {\n                tab.active = false;\n            });\n            tab.active = true;\n        };\n\n        ctrl.addTab = function addTab(tab) {\n            tabs.push(tab);\n            if ($scope.openOnLoad && (tabs.length === 1 || tab.active)) {\n                ctrl.select(tab);\n            }\n        };\n\n        ctrl.removeTab = function removeTab(tab) {\n            var index = tabs.indexOf(tab);\n            //Select a new tab if the tab to be removed is selected\n            if (tab.active && tabs.length > 1) {\n                //If this is the last tab, select the previous tab. else, the next tab.\n                var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;\n                ctrl.select(tabs[newActiveIndex]);\n            }\n            tabs.splice(index, 1);\n        };\n    }])\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tabset\n     * @restrict EA\n     *\n     * @description\n     * Tabset is the outer container for the tabs directive\n     *\n     * @param {boolean=} vertical Whether or not to use vertical styling for the tabs.\n     * @param {boolean=} justified Whether or not to use justified styling for the tabs.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <tabset>\n          <tab heading=\"Tab 1\"><b>First</b> Content!</tab>\n          <tab heading=\"Tab 2\"><i>Second</i> Content!</tab>\n        </tabset>\n        <hr />\n        <tabset vertical=\"true\">\n          <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n          <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n        </tabset>\n        <tabset justified=\"true\">\n          <tab heading=\"Justified Tab 1\"><b>First</b> Justified Content!</tab>\n          <tab heading=\"Justified Tab 2\"><i>Second</i> Justified Content!</tab>\n        </tabset>\n      </file>\n    </example>\n     */\n    .directive('tabset', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            transclude: true,\n            replace: true,\n            scope: {\n                openOnLoad: '=?'\n            },\n            controller: 'TabsetController',\n            templateUrl: function templateUrl(elem, attr) {\n                var type = attr.vertical == 'true' ? 'vertical' : 'horizontal';\n                return 'template/tabs/tabset-' + type + '.html';\n            },\n            link: function link(scope, element, attrs) {\n                scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n                scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n                scope.type = angular.isDefined(attrs.type) ? scope.$parent.$eval(attrs.type) : 'tabs';\n            }\n        };\n    })\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tab\n     * @restrict EA\n     *\n     * @param {string=} heading The visible heading, or title, of the tab. Set HTML headings with {@link mm.foundation.tabs.directive:tabHeading tabHeading}.\n     * @param {string=} select An expression to evaluate when the tab is selected.\n     * @param {boolean=} active A binding, telling whether or not this tab is selected.\n     * @param {boolean=} disabled A binding, telling whether or not this tab is disabled.\n     *\n     * @description\n     * Creates a tab with a heading and content. Must be placed within a {@link mm.foundation.tabs.directive:tabset tabset}.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <div ng-controller=\"TabsDemoCtrl\">\n          <button class=\"button small\" ng-click=\"items[0].active = true\">\n            Select item 1, using active binding\n          </button>\n          <button class=\"button small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n            Enable/disable item 2, using disabled binding\n          </button>\n          <br />\n          <tabset>\n            <tab heading=\"Tab 1\">First Tab</tab>\n            <tab select=\"alertMe()\">\n              <tab-heading><i class=\"fa fa-bell\"></i> Alert me!</tab-heading>\n              Second Tab, with alert callback and html heading!\n            </tab>\n            <tab ng-repeat=\"item in items\"\n              heading=\"{{item.title}}\"\n              disabled=\"item.disabled\"\n              active=\"item.active\">\n              {{item.content}}\n            </tab>\n          </tabset>\n        </div>\n      </file>\n      <file name=\"script.js\">\n        function TabsDemoCtrl($scope) {\n          $scope.items = [\n            { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n            { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n          ];\n    \n          $scope.alertMe = function() {\n            setTimeout(function() {\n              alert(\"You've selected the alert tab!\");\n            });\n          };\n        };\n      </file>\n    </example>\n     */\n\n    /**\n     * @ngdoc directive\n     * @name mm.foundation.tabs.directive:tabHeading\n     * @restrict EA\n     *\n     * @description\n     * Creates an HTML heading for a {@link mm.foundation.tabs.directive:tab tab}. Must be placed as a child of a tab element.\n     *\n     * @example\n    <example module=\"mm.foundation\">\n      <file name=\"index.html\">\n        <tabset>\n          <tab>\n            <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n            And some content, too!\n          </tab>\n          <tab>\n            <tab-heading><i class=\"fa fa-heart\"></i> Icon heading?!?</tab-heading>\n            That's right.\n          </tab>\n        </tabset>\n      </file>\n    </example>\n     */\n    .directive('tab', ['$parse', function ($parse) {\n        'ngInject';\n\n        return {\n            require: '^tabset',\n            restrict: 'EA',\n            replace: true,\n            templateUrl: 'template/tabs/tab.html',\n            transclude: true,\n            scope: {\n                heading: '@',\n                onSelect: '&select', //This callback is called in contentHeadingTransclude\n                //once it inserts the tab's content into the dom\n                onDeselect: '&deselect'\n            },\n            controller: function controller() {\n                //Empty controller so other directives can require being 'under' a tab\n            },\n            compile: function compile(elm, attrs, transclude) {\n                return function postLink(scope, elm, attrs, tabsetCtrl) {\n                    var getActive, setActive;\n                    if (attrs.active) {\n                        getActive = $parse(attrs.active);\n                        setActive = getActive.assign;\n                        scope.$parent.$watch(getActive, function updateActive(value, oldVal) {\n                            // Avoid re-initializing scope.active as it is already initialized\n                            // below. (watcher is called async during init with value ===\n                            // oldVal)\n                            if (value !== oldVal) {\n                                scope.active = !!value;\n                            }\n                        });\n                        scope.active = getActive(scope.$parent);\n                    } else {\n                        setActive = getActive = angular.noop;\n                    }\n\n                    scope.$watch('active', function (active) {\n                        if (!angular.isFunction(setActive)) {\n                            return;\n                        }\n                        // Note this watcher also initializes and assigns scope.active to the\n                        // attrs.active expression.\n                        setActive(scope.$parent, active);\n                        if (active) {\n                            tabsetCtrl.select(scope);\n                            scope.onSelect();\n                            scope.$emit('change.af.tabs', elm);\n                        } else {\n                            scope.onDeselect();\n                        }\n                    });\n\n                    scope.disabled = false;\n                    if (attrs.disabled) {\n                        scope.$parent.$watch($parse(attrs.disabled), function (value) {\n                            scope.disabled = !!value;\n                        });\n                    }\n\n                    scope.select = function () {\n                        if (!scope.disabled) {\n                            scope.active = true;\n                        }\n                    };\n\n                    tabsetCtrl.addTab(scope);\n                    scope.$on('$destroy', function () {\n                        tabsetCtrl.removeTab(scope);\n                    });\n\n                    //We need to transclude later, once the content container is ready.\n                    //when this link happens, we're inside a tab heading.\n                    scope.$transcludeFn = transclude;\n                };\n            }\n        };\n    }]).directive('tabHeadingTransclude', function () {\n        'ngInject';\n\n        return {\n            restrict: 'A',\n            require: '^tab',\n            link: function link(scope, elm, attrs, tabCtrl) {\n                scope.$watch('headingElement', function updateHeadingElement(heading) {\n                    if (heading) {\n                        elm.html('');\n                        elm.append(heading);\n                    }\n                });\n            }\n        };\n    }).directive('tabContentTransclude', function () {\n        'ngInject';\n\n        return {\n            restrict: 'A',\n            require: '^tabset',\n            link: function link(scope, elm, attrs) {\n                var tab = scope.$eval(attrs.tabContentTransclude);\n\n                //Now our tab is ready to be transcluded: both the tab heading area\n                //and the tab content area are loaded.  Transclude 'em both.\n                tab.$transcludeFn(tab.$parent, function (contents) {\n                    angular.forEach(contents, function (node) {\n                        if (isTabHeading(node)) {\n                            //Let tabHeadingTransclude know.\n                            tab.headingElement = node;\n                        } else {\n                            elm.append(node);\n                        }\n                    });\n                });\n            }\n        };\n\n        function isTabHeading(node) {\n            return node.tagName && (node.hasAttribute('tab-heading') || node.hasAttribute('data-tab-heading') || node.tagName.toLowerCase() === 'tab-heading' || node.tagName.toLowerCase() === 'data-tab-heading');\n        }\n    });\n\n    (function () {\n        angular.module(\"mm.foundation.tabs\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/tabs/tab.html\", \"<li class=\\\"tabs-title\\\" ng-class=\\\"{\\'is-active\\': active}\\\">\\n    <a href=\\\"\\\" ng-click=\\\"select()\\\" ng-attr-aria-selected=\\\"{{active}}\\\" tab-heading-transclude>{{heading}}</a>\\n</li>\\n\");\n            $templateCache.put(\"template/tabs/tabset-horizontal.html\", \"<div class=\\\"tabbable\\\">\\n  <ul class=\\\"tabs\\\" ng-transclude></ul>\\n  <div class=\\\"tabs-content\\\">\\n    <div class=\\\"tabs-panel\\\"\\n      ng-repeat=\\\"tab in tabs\\\"\\n      ng-class=\\\"{\\'is-active\\': tab.active}\\\" \\n      aria-hidden=\\\\\\\"{{!tab.active}}\\\\\\\">\\n      <div tab-content-transclude=\\\"tab\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\");\n            $templateCache.put(\"template/tabs/tabset-vertical.html\", \"<div class=\\\"tabbable row collapse\\\">\\n  <div class=\\\"medium-3 columns\\\">\\n    <ul class=\\\"tabs vertical\\\" ng-transclude></ul>\\n  </div>\\n  <div class=\\\"medium-9 columns\\\">\\n    <div class=\\\"tabs-content vertical\\\">\\n      <div class=\\\"tabs-panel\\\"\\n        ng-repeat=\\\"tab in tabs\\\"\\n        ng-class=\\\"{\\'is-active\\': tab.active}\\\" aria-hidden=\\\\\\\"{{!tab.active}}\\\\\\\">\\n        <div tab-content-transclude=\\\"tab\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\");\n        }]);\n    })();\n    'use strict';\n    /**\n     * The following features are still outstanding: animation as a\n     * function, placement as a function, inside, support for more triggers than\n     * just mouse enter/leave, html tooltips, and selector delegation.\n     */\n    angular.module('mm.foundation.tooltip', ['mm.foundation.position', 'mm.foundation.bindHtml'])\n\n    /**\n     * The $tooltip service creates tooltip- and popover-like directives as well as\n     * houses global options for them.\n     */\n    .provider('$tooltip', function () {\n        'ngInject';\n        // The default options tooltip and popover.\n\n        var defaultOptions = {\n            placement: 'top',\n            popupDelay: 0\n        };\n\n        // Default hide triggers for each show trigger\n        var triggerMap = {\n            'mouseover': 'mouseout',\n            'click': 'click',\n            'focus': 'blur'\n        };\n\n        // The options specified to the provider globally.\n        var globalOptions = {};\n\n        /**\n         * `options({})` allows global configuration of all tooltips in the\n         * application.\n         *\n         *   var app = angular.module( 'App', ['mm.foundation.tooltip'], function( $tooltipProvider ) {\n         *     // place tooltips left instead of top by default\n         *     $tooltipProvider.options( { placement: 'left' } );\n         *   });\n         */\n        this.options = function (value) {\n            angular.extend(globalOptions, value);\n        };\n\n        /**\n         * This allows you to extend the set of trigger mappings available. E.g.:\n         *\n         *   $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );\n         */\n        this.setTriggers = function setTriggers(triggers) {\n            angular.extend(triggerMap, triggers);\n        };\n\n        /**\n         * This is a helper function for translating camel-case to snake-case.\n         */\n        function snake_case(name) {\n            var regexp = /[A-Z]/g;\n            var separator = '-';\n            return name.replace(regexp, function (letter, pos) {\n                return (pos ? separator : '') + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * Returns the actual instance of the $tooltip service.\n         * TODO support multiple triggers\n         */\n        this.$get = ['$window', '$compile', '$timeout', '$parse', '$document', '$position', '$interpolate', '$animate', function ($window, $compile, $timeout, $parse, $document, $position, $interpolate, $animate) {\n            'ngInject';\n\n            return function $tooltip(type, prefix, defaultTriggerShow) {\n                var options = angular.extend({}, defaultOptions, globalOptions);\n\n                /**\n                 * Returns an object of show and hide triggers.\n                 *\n                 * If a trigger is supplied,\n                 * it is used to show the tooltip; otherwise, it will use the `trigger`\n                 * option passed to the `$tooltipProvider.options` method; else it will\n                 * default to the trigger supplied to this directive factory.\n                 *\n                 * The hide trigger is based on the show trigger. If the `trigger` option\n                 * was passed to the `$tooltipProvider.options` method, it will use the\n                 * mapped trigger from `triggerMap` or the passed trigger if the map is\n                 * undefined; otherwise, it uses the `triggerMap` value of the show\n                 * trigger; else it will just use the show trigger.\n                 */\n                function getTriggers(trigger) {\n                    var show = (trigger || options.trigger || defaultTriggerShow).split(' ');\n                    var hide = show.map(function (trigger) {\n                        return triggerMap[trigger] || trigger;\n                    });\n                    return {\n                        show: show,\n                        hide: hide\n                    };\n                }\n\n                var directiveName = snake_case(type);\n\n                var startSym = $interpolate.startSymbol();\n                var endSym = $interpolate.endSymbol();\n                var template = '<div ' + directiveName + '-popup ' + 'title=\"' + startSym + 'tt_title' + endSym + '\" ' + 'content=\"' + startSym + 'tt_content' + endSym + '\" ' + 'placement=\"' + startSym + 'tt_placement' + endSym + '\" ' + 'is-open=\"tt_isOpen\"' + '>' + '</div>';\n\n                return {\n                    restrict: 'EA',\n                    scope: true,\n                    compile: function compile(tElem) {\n                        var tooltipLinker = $compile(template);\n\n                        return function link(scope, element, attrs) {\n                            var $body = angular.element(document.querySelector('body'));\n                            var tooltip;\n                            var popupTimeout;\n                            var appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : false;\n                            var triggers = getTriggers(undefined);\n                            var hasEnableExp = angular.isDefined(attrs[prefix + 'Enable']);\n\n                            var positionTooltip = function positionTooltip() {\n                                var position;\n                                var ttWidth;\n                                var ttHeight;\n                                var ttPosition;\n                                // Get the position of the directive element.\n                                position = appendToBody ? $position.offset(element) : $position.position(element);\n\n                                // Get the height and width of the tooltip so we can center it.\n                                ttWidth = tooltip.prop('offsetWidth');\n                                ttHeight = tooltip.prop('offsetHeight');\n\n                                var scrollTop = $window.pageYOffset;\n                                if (scope.tt_placement === 'top' && position.top - scrollTop - ttHeight - 20 < 0) {\n                                    scope.tt_placement = 'bottom';\n                                }\n\n                                var tt_remSize = parseFloat(getComputedStyle(tooltip[0]).fontSize);\n                                // Calculate the tooltip's top and left coordinates to center it with\n                                // this directive.\n                                switch (scope.tt_placement) {\n                                    case 'right':\n                                        ttPosition = {\n                                            top: position.top + position.height / 2 - ttHeight / 2,\n                                            left: position.left + position.width + 10\n                                        };\n                                        break;\n                                    case 'bottom':\n                                        ttPosition = {\n                                            top: position.top + position.height + 10,\n                                            left: position.left - 2.25 * tt_remSize + element[0].offsetWidth / 2\n                                        };\n                                        break;\n                                    case 'left':\n                                        ttPosition = {\n                                            top: position.top + position.height / 2 - ttHeight / 2,\n                                            left: position.left - ttWidth - 10\n                                        };\n                                        break;\n                                    default:\n                                        //top\n                                        ttPosition = {\n                                            top: position.top - ttHeight - 10,\n                                            left: position.left - 2.25 * tt_remSize + element[0].offsetWidth / 2\n                                        };\n                                        break;\n                                }\n\n                                ttPosition.top += 'px';\n                                ttPosition.left += 'px';\n\n                                // Now set the calculated positioning.\n                                tooltip.css(ttPosition);\n                            };\n\n                            // By default, the tooltip is not open.\n                            // TODO add ability to start tooltip opened\n                            scope.tt_isOpen = false;\n\n                            function toggleTooltipBind() {\n                                if (!scope.tt_isOpen) {\n                                    showTooltipBind();\n                                } else {\n                                    hideTooltipBind();\n                                }\n                            }\n\n                            // Show the tooltip with delay if specified, otherwise show it immediately\n                            function showTooltipBind() {\n                                if (hasEnableExp && !scope.$eval(attrs[prefix + 'Enable'])) {\n                                    return;\n                                }\n                                if (scope.tt_popupDelay) {\n                                    popupTimeout = $timeout(show, scope.tt_popupDelay, false);\n                                    popupTimeout.then(function (reposition) {\n                                        reposition();\n                                    }, angular.noop);\n                                } else {\n                                    show()();\n                                }\n                            }\n\n                            function closeOnClick(e) {\n                                var elementContents = Array.prototype.slice.apply(element[0].querySelectorAll('*'));\n\n                                if (!elementContents.length) {\n                                    return;\n                                }\n                                var isOuterElement = elementContents.every(function (node) {\n                                    return node !== e.target;\n                                });\n                                if (isOuterElement) {\n                                    hide();\n                                    scope.$apply();\n                                }\n                            }\n\n                            function hideTooltipBind() {\n                                scope.$apply(function () {\n                                    hide();\n                                });\n                            }\n\n                            // Show the tooltip popup element.\n                            function show() {\n\n                                // Don't show empty tooltips.\n                                if (!scope.tt_content) {\n                                    return angular.noop;\n                                }\n\n                                createTooltip();\n\n                                // Set the initial positioning.\n                                tooltip.css({\n                                    top: 0,\n                                    left: 0\n                                });\n\n                                // Now we add it to the DOM because need some info about it. But it's not\n                                // visible yet anyway.\n                                if (appendToBody) {\n                                    // $document.find('body').append(tooltip);\n                                    // $document.find('body')\n                                    $animate.enter(tooltip, $document.find('body'));\n                                } else {\n                                    $animate.enter(tooltip, element.parent(), element);\n                                    // element.after(tooltip);\n                                }\n\n                                positionTooltip();\n\n                                // And show the tooltip.\n                                scope.tt_isOpen = true;\n\n                                // Make the tooltip close when background is clicked\n                                $body.on('click', closeOnClick);\n\n                                scope.$digest(); // digest required as $apply is not called\n\n                                // Return positioning function as promise callback for correct\n                                // positioning after draw.\n                                return positionTooltip;\n                            }\n\n                            // Hide the tooltip popup element.\n                            function hide() {\n                                // First things first: we don't show it anymore.\n                                scope.tt_isOpen = false;\n\n                                //if tooltip is going to be shown after delay, we must cancel this\n                                $timeout.cancel(popupTimeout);\n\n                                // remove close click listener\n                                $body.off('click', closeOnClick);\n                                removeTooltip();\n                            }\n\n                            function createTooltip() {\n                                // There can only be one tooltip element per directive shown at once.\n                                if (tooltip) {\n                                    removeTooltip();\n                                }\n                                tooltip = tooltipLinker(scope, function () {});\n\n                                // Get contents rendered into the tooltip\n                                scope.$digest();\n                            }\n\n                            function removeTooltip() {\n                                if (tooltip) {\n                                    $animate.leave(tooltip);\n                                    // tooltip.remove();\n                                    tooltip = null;\n                                }\n                            }\n\n                            /**\n                             * Observe the relevant attributes.\n                             */\n                            attrs.$observe(type, function (val) {\n                                scope.tt_content = val;\n\n                                if (!val && scope.tt_isOpen) {\n                                    hide();\n                                }\n                            });\n\n                            attrs.$observe(prefix + 'Title', function (val) {\n                                scope.tt_title = val;\n                            });\n\n                            attrs[prefix + 'Placement'] = attrs[prefix + 'Placement'] || null;\n\n                            attrs.$observe(prefix + 'Placement', function (val) {\n                                scope.tt_placement = angular.isDefined(val) && val ? val : options.placement;\n                            });\n\n                            attrs[prefix + 'PopupDelay'] = attrs[prefix + 'PopupDelay'] || null;\n\n                            attrs.$observe(prefix + 'PopupDelay', function (val) {\n                                var delay = parseInt(val, 10);\n                                scope.tt_popupDelay = !isNaN(delay) ? delay : options.popupDelay;\n                            });\n\n                            var unregisterTriggers = function unregisterTriggers() {\n                                triggers.show.forEach(function (showTrigger, i) {\n                                    var hideTrigger = triggers.hide[i];\n                                    if (showTrigger === hideTrigger) {\n                                        element.off(showTrigger, toggleTooltipBind);\n                                    } else {\n                                        element.off(showTrigger, showTooltipBind);\n                                        element.off(hideTrigger, hideTooltipBind);\n                                    }\n                                });\n                            };\n\n                            attrs[prefix + 'Trigger'] = attrs[prefix + 'Trigger'] || null;\n\n                            attrs.$observe(prefix + 'Trigger', function (val) {\n                                unregisterTriggers();\n                                triggers = getTriggers(val);\n                                triggers.show.forEach(function (showTrigger, i) {\n                                    var hideTrigger = triggers.hide[i];\n                                    if (showTrigger === hideTrigger) {\n                                        element.bind(showTrigger, toggleTooltipBind);\n                                    } else {\n                                        element.bind(showTrigger, showTooltipBind);\n                                        element.bind(hideTrigger, hideTooltipBind);\n                                    }\n                                });\n                                element.on('keydown', function (e) {\n                                    if (e.which === 27) {\n                                        hideTooltipBind();\n                                    }\n                                });\n                            });\n\n                            attrs.$observe(prefix + 'AppendToBody', function (val) {\n                                appendToBody = angular.isDefined(val) ? $parse(val)(scope) : appendToBody;\n                            });\n\n                            // if a tooltip is attached to <body> we need to remove it on\n                            // location change as its parent scope will probably not be destroyed\n                            // by the change.\n                            if (appendToBody) {\n                                scope.$on('$locationChangeSuccess', function closeTooltipOnLocationChangeSuccess() {\n                                    if (scope.tt_isOpen) {\n                                        hide();\n                                    }\n                                });\n                            }\n\n                            // Make sure tooltip is destroyed and removed.\n                            scope.$on('$destroy', function onDestroyTooltip() {\n                                $timeout.cancel(popupTimeout);\n                                unregisterTriggers();\n                                removeTooltip();\n                            });\n                        };\n                    }\n                };\n            };\n        }];\n    }).directive('tooltipPopup', function () {\n        'ngInject';\n\n        return {\n            restrict: 'EA',\n            replace: true,\n            scope: {\n                content: '@',\n                placement: '@',\n                isOpen: '&'\n            },\n            templateUrl: 'template/tooltip/tooltip-popup.html'\n        };\n    }).directive('tooltip', ['$tooltip', function ($tooltip) {\n        'ngInject';\n\n        return $tooltip('tooltip', 'tooltip', 'mouseover');\n    }]).directive('tooltipHtmlUnsafePopup', function () {\n        return {\n            restrict: 'EA',\n            replace: true,\n            scope: {\n                content: '@',\n                placement: '@',\n                isOpen: '&'\n            },\n            templateUrl: 'template/tooltip/tooltip-html-unsafe-popup.html'\n        };\n    }).directive('tooltipHtmlUnsafe', ['$tooltip', function ($tooltip) {\n        'ngInject';\n\n        return $tooltip('tooltipHtmlUnsafe', 'tooltip', 'mouseover');\n    }]);\n\n    (function () {\n        angular.module(\"mm.foundation.tooltip\").run([\"$templateCache\", function ($templateCache) {\n            $templateCache.put(\"template/tooltip/tooltip-html-unsafe-popup.html\", \"<div class=\\\"tooltip {{placement}}\\\" style=\\\"width: auto;\\\">\\n  <span bind-html-unsafe=\\\"content\\\"></span>\\n</div>\\n\");\n            $templateCache.put(\"template/tooltip/tooltip-popup.html\", \"<div class=\\\"tooltip {{placement}}\\\" style=\\\"width: auto;\\\">\\n  <span ng-bind=\\\"content\\\"></span>\\n</div>\\n\");\n        }]);\n    })();\n    angular.module(\"mm.foundation\", [\"mm.foundation.accordion\", \"mm.foundation.alert\", \"mm.foundation.bindHtml\", \"mm.foundation.buttons\", \"mm.foundation.drilldownMenu\", \"mm.foundation.dropdownMenu\", \"mm.foundation.dropdownToggle\", \"mm.foundation.mediaQueries\", \"mm.foundation.modal\", \"mm.foundation.offcanvas\", \"mm.foundation.orbit\", \"mm.foundation.pagination\", \"mm.foundation.position\", \"mm.foundation.progressbar\", \"mm.foundation.rating\", \"mm.foundation.tabs\", \"mm.foundation.tooltip\"]);\n});"],"sourceRoot":"assets/scripts/"}